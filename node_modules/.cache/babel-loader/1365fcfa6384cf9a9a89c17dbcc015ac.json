{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"color\", \"name\", \"size\", \"svgPaths16\", \"svgPaths20\", \"title\"],\n    _excluded2 = [\"className\"];\nimport React, { forwardRef } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { useStyleConfig } from '../../hooks';\nvar pseudoSelectors = {};\nvar internalStyles = {};\nvar Icon = /*#__PURE__*/forwardRef(function Icon(_ref, ref) {\n  var className = _ref.className,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      name = _ref.name,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 16 : _ref$size,\n      svgPaths16 = _ref.svgPaths16,\n      svgPaths20 = _ref.svgPaths20,\n      title = _ref.title,\n      svgProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useStyleConfig = useStyleConfig('Icon', {\n    color: color\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      styleProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var SIZE_STANDARD = 16;\n  var SIZE_LARGE = 20; // Choose which pixel grid is most appropriate for given icon size\n\n  var pixelGridSize = size >= SIZE_LARGE ? SIZE_LARGE : SIZE_STANDARD;\n  var pathStrings = pixelGridSize === SIZE_STANDARD ? svgPaths16 : svgPaths20;\n  var paths = pathStrings.map(function (d, i) {\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(\"path\", {\n        key: i,\n        d: d,\n        fillRule: \"evenodd\"\n      })\n    );\n  });\n  var viewBox = \"0 0 \".concat(pixelGridSize, \" \").concat(pixelGridSize);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    is: \"svg\",\n    ref: ref,\n    className: cx(className, themedClassName)\n  }, styleProps, svgProps, {\n    \"data-icon\": name,\n    width: size,\n    height: size,\n    viewBox: viewBox\n  }), title && /*#__PURE__*/React.createElement(\"title\", null, title), paths);\n});\nIcon.propTypes = {\n  /**\n   * Class name passed to the component.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Color of icon. Equivalent to setting CSS `fill` property.\n   */\n  color: PropTypes.string,\n\n  /**\n   * Size of the icon, in pixels.\n   * Blueprint contains 16px and 20px SVG icon images,\n   * and chooses the appropriate resolution based on this prop.\n   */\n  size: PropTypes.number,\n\n  /**\n   * Name of the icon\n   */\n  name: PropTypes.string,\n\n  /**\n   * Description string.\n   * Browsers usually render this as a tooltip on hover, whereas screen\n   * readers will use it for aural feedback.\n   * By default, this is set to the icon's name for accessibility.\n   */\n  title: PropTypes.string,\n  svgPaths16: PropTypes.arrayOf(PropTypes.string).isRequired,\n  svgPaths20: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default Icon;","map":{"version":3,"names":["_extends","_objectWithoutProperties","_excluded","_excluded2","React","forwardRef","cx","PropTypes","Box","useStyleConfig","pseudoSelectors","internalStyles","Icon","_ref","ref","className","_ref$color","color","name","_ref$size","size","svgPaths16","svgPaths20","title","svgProps","_useStyleConfig","themedClassName","styleProps","SIZE_STANDARD","SIZE_LARGE","pixelGridSize","pathStrings","paths","map","d","i","createElement","key","fillRule","viewBox","concat","is","width","height","propTypes","string","number","arrayOf","isRequired"],"sources":["C:/Users/anish/auth-final/node_modules/evergreen-ui/esm/icons/src/Icon.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"color\", \"name\", \"size\", \"svgPaths16\", \"svgPaths20\", \"title\"],\n    _excluded2 = [\"className\"];\nimport React, { forwardRef } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { useStyleConfig } from '../../hooks';\nvar pseudoSelectors = {};\nvar internalStyles = {};\nvar Icon = /*#__PURE__*/forwardRef(function Icon(_ref, ref) {\n  var className = _ref.className,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      name = _ref.name,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 16 : _ref$size,\n      svgPaths16 = _ref.svgPaths16,\n      svgPaths20 = _ref.svgPaths20,\n      title = _ref.title,\n      svgProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useStyleConfig = useStyleConfig('Icon', {\n    color: color\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      styleProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var SIZE_STANDARD = 16;\n  var SIZE_LARGE = 20; // Choose which pixel grid is most appropriate for given icon size\n\n  var pixelGridSize = size >= SIZE_LARGE ? SIZE_LARGE : SIZE_STANDARD;\n  var pathStrings = pixelGridSize === SIZE_STANDARD ? svgPaths16 : svgPaths20;\n  var paths = pathStrings.map(function (d, i) {\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(\"path\", {\n        key: i,\n        d: d,\n        fillRule: \"evenodd\"\n      })\n    );\n  });\n  var viewBox = \"0 0 \".concat(pixelGridSize, \" \").concat(pixelGridSize);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    is: \"svg\",\n    ref: ref,\n    className: cx(className, themedClassName)\n  }, styleProps, svgProps, {\n    \"data-icon\": name,\n    width: size,\n    height: size,\n    viewBox: viewBox\n  }), title && /*#__PURE__*/React.createElement(\"title\", null, title), paths);\n});\nIcon.propTypes = {\n  /**\n   * Class name passed to the component.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Color of icon. Equivalent to setting CSS `fill` property.\n   */\n  color: PropTypes.string,\n\n  /**\n   * Size of the icon, in pixels.\n   * Blueprint contains 16px and 20px SVG icon images,\n   * and chooses the appropriate resolution based on this prop.\n   */\n  size: PropTypes.number,\n\n  /**\n   * Name of the icon\n   */\n  name: PropTypes.string,\n\n  /**\n   * Description string.\n   * Browsers usually render this as a tooltip on hover, whereas screen\n   * readers will use it for aural feedback.\n   * By default, this is set to the icon's name for accessibility.\n   */\n  title: PropTypes.string,\n  svgPaths16: PropTypes.arrayOf(PropTypes.string).isRequired,\n  svgPaths20: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default Icon;"],"mappings":"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"},"metadata":{},"sourceType":"module"}