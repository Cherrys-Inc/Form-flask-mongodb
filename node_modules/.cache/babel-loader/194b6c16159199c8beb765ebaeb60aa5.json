{"ast":null,"code":"import React from 'react';\n\nfunction setRef(ref, node) {\n  if (typeof ref === 'function') {\n    ref(node);\n  } else if (ref && 'current' in ref) {\n    ref.current = node;\n  }\n}\n/**\n * React hook that merges up to two React refs into a single memoized function React Ref\n * @param {import('react').Ref<any>} refA\n * @param {import('react').Ref<any>} [refB]\n */\n\n\nexport function useMergedRef(refA, refB) {\n  return React.useMemo(function () {\n    if (!refA && !refB) {\n      return null;\n    }\n\n    return function (node) {\n      setRef(refA, node);\n      setRef(refB, node);\n    };\n  }, [refA, refB]);\n}","map":{"version":3,"names":["React","setRef","ref","node","current","useMergedRef","refA","refB","useMemo"],"sources":["C:/Users/anish/auth-final/node_modules/evergreen-ui/esm/hooks/use-merged-ref.js"],"sourcesContent":["import React from 'react';\n\nfunction setRef(ref, node) {\n  if (typeof ref === 'function') {\n    ref(node);\n  } else if (ref && 'current' in ref) {\n    ref.current = node;\n  }\n}\n/**\n * React hook that merges up to two React refs into a single memoized function React Ref\n * @param {import('react').Ref<any>} refA\n * @param {import('react').Ref<any>} [refB]\n */\n\n\nexport function useMergedRef(refA, refB) {\n  return React.useMemo(function () {\n    if (!refA && !refB) {\n      return null;\n    }\n\n    return function (node) {\n      setRef(refA, node);\n      setRef(refB, node);\n    };\n  }, [refA, refB]);\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,IAArB,EAA2B;EACzB,IAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;IAC7BA,GAAG,CAACC,IAAD,CAAH;EACD,CAFD,MAEO,IAAID,GAAG,IAAI,aAAaA,GAAxB,EAA6B;IAClCA,GAAG,CAACE,OAAJ,GAAcD,IAAd;EACD;AACF;AACD;AACA;AACA;AACA;AACA;;;AAGA,OAAO,SAASE,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;EACvC,OAAOP,KAAK,CAACQ,OAAN,CAAc,YAAY;IAC/B,IAAI,CAACF,IAAD,IAAS,CAACC,IAAd,EAAoB;MAClB,OAAO,IAAP;IACD;;IAED,OAAO,UAAUJ,IAAV,EAAgB;MACrBF,MAAM,CAACK,IAAD,EAAOH,IAAP,CAAN;MACAF,MAAM,CAACM,IAAD,EAAOJ,IAAP,CAAN;IACD,CAHD;EAID,CATM,EASJ,CAACG,IAAD,EAAOC,IAAP,CATI,CAAP;AAUD"},"metadata":{},"sourceType":"module"}