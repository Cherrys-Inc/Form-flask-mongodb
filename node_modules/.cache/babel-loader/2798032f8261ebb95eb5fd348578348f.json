{"ast":null,"code":"(function () {\n  var Query, coreChars, countDir, getCharCodes, getExtension, opt_char_re, truncatedUpperCase, _ref;\n\n  _ref = require(\"./pathScorer\"), countDir = _ref.countDir, getExtension = _ref.getExtension;\n\n  module.exports = Query = function () {\n    function Query(query, _arg) {\n      var optCharRegEx, pathSeparator, _ref1;\n\n      _ref1 = _arg != null ? _arg : {}, optCharRegEx = _ref1.optCharRegEx, pathSeparator = _ref1.pathSeparator;\n\n      if (!(query && query.length)) {\n        return null;\n      }\n\n      this.query = query;\n      this.query_lw = query.toLowerCase();\n      this.core = coreChars(query, optCharRegEx);\n      this.core_lw = this.core.toLowerCase();\n      this.core_up = truncatedUpperCase(this.core);\n      this.depth = countDir(query, query.length, pathSeparator);\n      this.ext = getExtension(this.query_lw);\n      this.charCodes = getCharCodes(this.query_lw);\n    }\n\n    return Query;\n  }();\n\n  opt_char_re = /[ _\\-:\\/\\\\]/g;\n\n  coreChars = function (query, optCharRegEx) {\n    if (optCharRegEx == null) {\n      optCharRegEx = opt_char_re;\n    }\n\n    return query.replace(optCharRegEx, '');\n  };\n\n  truncatedUpperCase = function (str) {\n    var char, upper, _i, _len;\n\n    upper = \"\";\n\n    for (_i = 0, _len = str.length; _i < _len; _i++) {\n      char = str[_i];\n      upper += char.toUpperCase()[0];\n    }\n\n    return upper;\n  };\n\n  getCharCodes = function (str) {\n    var charCodes, i, len;\n    len = str.length;\n    i = -1;\n    charCodes = [];\n\n    while (++i < len) {\n      charCodes[str.charCodeAt(i)] = true;\n    }\n\n    return charCodes;\n  };\n}).call(this);","map":{"version":3,"names":["Query","coreChars","countDir","getCharCodes","getExtension","opt_char_re","truncatedUpperCase","_ref","require","module","exports","query","_arg","optCharRegEx","pathSeparator","_ref1","length","query_lw","toLowerCase","core","core_lw","core_up","depth","ext","charCodes","replace","str","char","upper","_i","_len","toUpperCase","i","len","charCodeAt","call"],"sources":["C:/Users/anish/auth-final/node_modules/fuzzaldrin-plus/lib/query.js"],"sourcesContent":["(function() {\n  var Query, coreChars, countDir, getCharCodes, getExtension, opt_char_re, truncatedUpperCase, _ref;\n\n  _ref = require(\"./pathScorer\"), countDir = _ref.countDir, getExtension = _ref.getExtension;\n\n  module.exports = Query = (function() {\n    function Query(query, _arg) {\n      var optCharRegEx, pathSeparator, _ref1;\n      _ref1 = _arg != null ? _arg : {}, optCharRegEx = _ref1.optCharRegEx, pathSeparator = _ref1.pathSeparator;\n      if (!(query && query.length)) {\n        return null;\n      }\n      this.query = query;\n      this.query_lw = query.toLowerCase();\n      this.core = coreChars(query, optCharRegEx);\n      this.core_lw = this.core.toLowerCase();\n      this.core_up = truncatedUpperCase(this.core);\n      this.depth = countDir(query, query.length, pathSeparator);\n      this.ext = getExtension(this.query_lw);\n      this.charCodes = getCharCodes(this.query_lw);\n    }\n\n    return Query;\n\n  })();\n\n  opt_char_re = /[ _\\-:\\/\\\\]/g;\n\n  coreChars = function(query, optCharRegEx) {\n    if (optCharRegEx == null) {\n      optCharRegEx = opt_char_re;\n    }\n    return query.replace(optCharRegEx, '');\n  };\n\n  truncatedUpperCase = function(str) {\n    var char, upper, _i, _len;\n    upper = \"\";\n    for (_i = 0, _len = str.length; _i < _len; _i++) {\n      char = str[_i];\n      upper += char.toUpperCase()[0];\n    }\n    return upper;\n  };\n\n  getCharCodes = function(str) {\n    var charCodes, i, len;\n    len = str.length;\n    i = -1;\n    charCodes = [];\n    while (++i < len) {\n      charCodes[str.charCodeAt(i)] = true;\n    }\n    return charCodes;\n  };\n\n}).call(this);\n"],"mappings":"AAAA,CAAC,YAAW;EACV,IAAIA,KAAJ,EAAWC,SAAX,EAAsBC,QAAtB,EAAgCC,YAAhC,EAA8CC,YAA9C,EAA4DC,WAA5D,EAAyEC,kBAAzE,EAA6FC,IAA7F;;EAEAA,IAAI,GAAGC,OAAO,CAAC,cAAD,CAAd,EAAgCN,QAAQ,GAAGK,IAAI,CAACL,QAAhD,EAA0DE,YAAY,GAAGG,IAAI,CAACH,YAA9E;;EAEAK,MAAM,CAACC,OAAP,GAAiBV,KAAK,GAAI,YAAW;IACnC,SAASA,KAAT,CAAeW,KAAf,EAAsBC,IAAtB,EAA4B;MAC1B,IAAIC,YAAJ,EAAkBC,aAAlB,EAAiCC,KAAjC;;MACAA,KAAK,GAAGH,IAAI,IAAI,IAAR,GAAeA,IAAf,GAAsB,EAA9B,EAAkCC,YAAY,GAAGE,KAAK,CAACF,YAAvD,EAAqEC,aAAa,GAAGC,KAAK,CAACD,aAA3F;;MACA,IAAI,EAAEH,KAAK,IAAIA,KAAK,CAACK,MAAjB,CAAJ,EAA8B;QAC5B,OAAO,IAAP;MACD;;MACD,KAAKL,KAAL,GAAaA,KAAb;MACA,KAAKM,QAAL,GAAgBN,KAAK,CAACO,WAAN,EAAhB;MACA,KAAKC,IAAL,GAAYlB,SAAS,CAACU,KAAD,EAAQE,YAAR,CAArB;MACA,KAAKO,OAAL,GAAe,KAAKD,IAAL,CAAUD,WAAV,EAAf;MACA,KAAKG,OAAL,GAAef,kBAAkB,CAAC,KAAKa,IAAN,CAAjC;MACA,KAAKG,KAAL,GAAapB,QAAQ,CAACS,KAAD,EAAQA,KAAK,CAACK,MAAd,EAAsBF,aAAtB,CAArB;MACA,KAAKS,GAAL,GAAWnB,YAAY,CAAC,KAAKa,QAAN,CAAvB;MACA,KAAKO,SAAL,GAAiBrB,YAAY,CAAC,KAAKc,QAAN,CAA7B;IACD;;IAED,OAAOjB,KAAP;EAED,CAnBwB,EAAzB;;EAqBAK,WAAW,GAAG,cAAd;;EAEAJ,SAAS,GAAG,UAASU,KAAT,EAAgBE,YAAhB,EAA8B;IACxC,IAAIA,YAAY,IAAI,IAApB,EAA0B;MACxBA,YAAY,GAAGR,WAAf;IACD;;IACD,OAAOM,KAAK,CAACc,OAAN,CAAcZ,YAAd,EAA4B,EAA5B,CAAP;EACD,CALD;;EAOAP,kBAAkB,GAAG,UAASoB,GAAT,EAAc;IACjC,IAAIC,IAAJ,EAAUC,KAAV,EAAiBC,EAAjB,EAAqBC,IAArB;;IACAF,KAAK,GAAG,EAAR;;IACA,KAAKC,EAAE,GAAG,CAAL,EAAQC,IAAI,GAAGJ,GAAG,CAACV,MAAxB,EAAgCa,EAAE,GAAGC,IAArC,EAA2CD,EAAE,EAA7C,EAAiD;MAC/CF,IAAI,GAAGD,GAAG,CAACG,EAAD,CAAV;MACAD,KAAK,IAAID,IAAI,CAACI,WAAL,GAAmB,CAAnB,CAAT;IACD;;IACD,OAAOH,KAAP;EACD,CARD;;EAUAzB,YAAY,GAAG,UAASuB,GAAT,EAAc;IAC3B,IAAIF,SAAJ,EAAeQ,CAAf,EAAkBC,GAAlB;IACAA,GAAG,GAAGP,GAAG,CAACV,MAAV;IACAgB,CAAC,GAAG,CAAC,CAAL;IACAR,SAAS,GAAG,EAAZ;;IACA,OAAO,EAAEQ,CAAF,GAAMC,GAAb,EAAkB;MAChBT,SAAS,CAACE,GAAG,CAACQ,UAAJ,CAAeF,CAAf,CAAD,CAAT,GAA+B,IAA/B;IACD;;IACD,OAAOR,SAAP;EACD,CATD;AAWD,CAxDD,EAwDGW,IAxDH,CAwDQ,IAxDR"},"metadata":{},"sourceType":"script"}