{"ast":null,"code":"var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nfunction isSimplePositionValue(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n\nfunction isComplexSpanValue(value) {\n  return typeof value === 'string' && value.includes('/');\n}\n\nvar alignmentValues = ['center', 'end', 'start', 'stretch'];\nvar displayValues = {\n  'inline-grid': ['-ms-inline-grid', 'inline-grid'],\n  grid: ['-ms-grid', 'grid']\n};\nvar propertyConverters = {\n  alignSelf: function alignSelf(value, style) {\n    if (alignmentValues.indexOf(value) > -1) {\n      style.msGridRowAlign = value;\n    }\n  },\n  gridColumn: function gridColumn(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridColumn = value;\n    } else if (isComplexSpanValue(value)) {\n      var _value$split = value.split('/'),\n          _value$split2 = _slicedToArray(_value$split, 2),\n          start = _value$split2[0],\n          end = _value$split2[1];\n\n      propertyConverters.gridColumnStart(+start, style);\n\n      var _end$split = end.split(/ ?span /),\n          _end$split2 = _slicedToArray(_end$split, 2),\n          maybeSpan = _end$split2[0],\n          maybeNumber = _end$split2[1];\n\n      if (maybeSpan === '') {\n        propertyConverters.gridColumnEnd(+start + +maybeNumber, style);\n      } else {\n        propertyConverters.gridColumnEnd(+end, style);\n      }\n    } else {\n      propertyConverters.gridColumnStart(value, style);\n    }\n  },\n  gridColumnEnd: function gridColumnEnd(value, style) {\n    var msGridColumn = style.msGridColumn;\n\n    if (isSimplePositionValue(value) && isSimplePositionValue(msGridColumn)) {\n      style.msGridColumnSpan = value - msGridColumn;\n    }\n  },\n  gridColumnStart: function gridColumnStart(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridColumn = value;\n    }\n  },\n  gridRow: function gridRow(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridRow = value;\n    } else if (isComplexSpanValue(value)) {\n      var _value$split3 = value.split('/'),\n          _value$split4 = _slicedToArray(_value$split3, 2),\n          start = _value$split4[0],\n          end = _value$split4[1];\n\n      propertyConverters.gridRowStart(+start, style);\n\n      var _end$split3 = end.split(/ ?span /),\n          _end$split4 = _slicedToArray(_end$split3, 2),\n          maybeSpan = _end$split4[0],\n          maybeNumber = _end$split4[1];\n\n      if (maybeSpan === '') {\n        propertyConverters.gridRowEnd(+start + +maybeNumber, style);\n      } else {\n        propertyConverters.gridRowEnd(+end, style);\n      }\n    } else {\n      propertyConverters.gridRowStart(value, style);\n    }\n  },\n  gridRowEnd: function gridRowEnd(value, style) {\n    var msGridRow = style.msGridRow;\n\n    if (isSimplePositionValue(value) && isSimplePositionValue(msGridRow)) {\n      style.msGridRowSpan = value - msGridRow;\n    }\n  },\n  gridRowStart: function gridRowStart(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridRow = value;\n    }\n  },\n  gridTemplateColumns: function gridTemplateColumns(value, style) {\n    style.msGridColumns = value;\n  },\n  gridTemplateRows: function gridTemplateRows(value, style) {\n    style.msGridRows = value;\n  },\n  justifySelf: function justifySelf(value, style) {\n    if (alignmentValues.indexOf(value) > -1) {\n      style.msGridColumnAlign = value;\n    }\n  }\n};\nexport default function grid(property, value, style) {\n  if (property === 'display' && value in displayValues) {\n    return displayValues[value];\n  }\n\n  if (property in propertyConverters) {\n    var propertyConverter = propertyConverters[property];\n    propertyConverter(value, style);\n  }\n}","map":{"version":3,"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","isSimplePositionValue","isNaN","isComplexSpanValue","includes","alignmentValues","displayValues","grid","propertyConverters","alignSelf","style","indexOf","msGridRowAlign","gridColumn","msGridColumn","_value$split","split","_value$split2","start","end","gridColumnStart","_end$split","_end$split2","maybeSpan","maybeNumber","gridColumnEnd","msGridColumnSpan","gridRow","msGridRow","_value$split3","_value$split4","gridRowStart","_end$split3","_end$split4","gridRowEnd","msGridRowSpan","gridTemplateColumns","msGridColumns","gridTemplateRows","msGridRows","justifySelf","msGridColumnAlign","property","propertyConverter"],"sources":["C:/Users/anish/auth-final/node_modules/ui-box/node_modules/inline-style-prefixer/es/plugins/grid.js"],"sourcesContent":["var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction isSimplePositionValue(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n\nfunction isComplexSpanValue(value) {\n  return typeof value === 'string' && value.includes('/');\n}\n\nvar alignmentValues = ['center', 'end', 'start', 'stretch'];\n\nvar displayValues = {\n  'inline-grid': ['-ms-inline-grid', 'inline-grid'],\n  grid: ['-ms-grid', 'grid']\n};\n\nvar propertyConverters = {\n  alignSelf: function alignSelf(value, style) {\n    if (alignmentValues.indexOf(value) > -1) {\n      style.msGridRowAlign = value;\n    }\n  },\n\n  gridColumn: function gridColumn(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridColumn = value;\n    } else if (isComplexSpanValue(value)) {\n      var _value$split = value.split('/'),\n          _value$split2 = _slicedToArray(_value$split, 2),\n          start = _value$split2[0],\n          end = _value$split2[1];\n\n      propertyConverters.gridColumnStart(+start, style);\n\n      var _end$split = end.split(/ ?span /),\n          _end$split2 = _slicedToArray(_end$split, 2),\n          maybeSpan = _end$split2[0],\n          maybeNumber = _end$split2[1];\n\n      if (maybeSpan === '') {\n        propertyConverters.gridColumnEnd(+start + +maybeNumber, style);\n      } else {\n        propertyConverters.gridColumnEnd(+end, style);\n      }\n    } else {\n      propertyConverters.gridColumnStart(value, style);\n    }\n  },\n\n  gridColumnEnd: function gridColumnEnd(value, style) {\n    var msGridColumn = style.msGridColumn;\n\n    if (isSimplePositionValue(value) && isSimplePositionValue(msGridColumn)) {\n      style.msGridColumnSpan = value - msGridColumn;\n    }\n  },\n\n  gridColumnStart: function gridColumnStart(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridColumn = value;\n    }\n  },\n\n  gridRow: function gridRow(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridRow = value;\n    } else if (isComplexSpanValue(value)) {\n      var _value$split3 = value.split('/'),\n          _value$split4 = _slicedToArray(_value$split3, 2),\n          start = _value$split4[0],\n          end = _value$split4[1];\n\n      propertyConverters.gridRowStart(+start, style);\n\n      var _end$split3 = end.split(/ ?span /),\n          _end$split4 = _slicedToArray(_end$split3, 2),\n          maybeSpan = _end$split4[0],\n          maybeNumber = _end$split4[1];\n\n      if (maybeSpan === '') {\n        propertyConverters.gridRowEnd(+start + +maybeNumber, style);\n      } else {\n        propertyConverters.gridRowEnd(+end, style);\n      }\n    } else {\n      propertyConverters.gridRowStart(value, style);\n    }\n  },\n\n  gridRowEnd: function gridRowEnd(value, style) {\n    var msGridRow = style.msGridRow;\n\n    if (isSimplePositionValue(value) && isSimplePositionValue(msGridRow)) {\n      style.msGridRowSpan = value - msGridRow;\n    }\n  },\n\n  gridRowStart: function gridRowStart(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridRow = value;\n    }\n  },\n\n  gridTemplateColumns: function gridTemplateColumns(value, style) {\n    style.msGridColumns = value;\n  },\n\n  gridTemplateRows: function gridTemplateRows(value, style) {\n    style.msGridRows = value;\n  },\n\n  justifySelf: function justifySelf(value, style) {\n    if (alignmentValues.indexOf(value) > -1) {\n      style.msGridColumnAlign = value;\n    }\n  }\n};\n\nexport default function grid(property, value, style) {\n  if (property === 'display' && value in displayValues) {\n    return displayValues[value];\n  }\n\n  if (property in propertyConverters) {\n    var propertyConverter = propertyConverters[property];\n    propertyConverter(value, style);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}