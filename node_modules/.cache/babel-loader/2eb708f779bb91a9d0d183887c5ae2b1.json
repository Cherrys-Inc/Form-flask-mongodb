{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nvar count = 0;\n/**\n * React hook that always returns an id value that is stable across re-renders\n * @param {string} prefix - a prefix to apply to id\n * @param {string} [explicitId] - an optional explicit value that takes precedence over the generated id\n * @returns {string}\n */\n\nexport function useId(prefix, explicitId) {\n  var _useState = useState(function () {\n    return explicitId || [prefix, ++count].filter(Boolean).join('-');\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      value = _useState2[0];\n\n  return value;\n}","map":{"version":3,"names":["_slicedToArray","useState","count","useId","prefix","explicitId","_useState","filter","Boolean","join","_useState2","value"],"sources":["C:/Users/anish/auth-final/node_modules/evergreen-ui/esm/hooks/use-id.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nvar count = 0;\n/**\n * React hook that always returns an id value that is stable across re-renders\n * @param {string} prefix - a prefix to apply to id\n * @param {string} [explicitId] - an optional explicit value that takes precedence over the generated id\n * @returns {string}\n */\n\nexport function useId(prefix, explicitId) {\n  var _useState = useState(function () {\n    return explicitId || [prefix, ++count].filter(Boolean).join('-');\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      value = _useState2[0];\n\n  return value;\n}"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,IAAIC,KAAK,GAAG,CAAZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,KAAT,CAAeC,MAAf,EAAuBC,UAAvB,EAAmC;EACxC,IAAIC,SAAS,GAAGL,QAAQ,CAAC,YAAY;IACnC,OAAOI,UAAU,IAAI,CAACD,MAAD,EAAS,EAAEF,KAAX,EAAkBK,MAAlB,CAAyBC,OAAzB,EAAkCC,IAAlC,CAAuC,GAAvC,CAArB;EACD,CAFuB,CAAxB;EAAA,IAGIC,UAAU,GAAGV,cAAc,CAACM,SAAD,EAAY,CAAZ,CAH/B;EAAA,IAIIK,KAAK,GAAGD,UAAU,CAAC,CAAD,CAJtB;;EAMA,OAAOC,KAAP;AACD"},"metadata":{},"sourceType":"module"}