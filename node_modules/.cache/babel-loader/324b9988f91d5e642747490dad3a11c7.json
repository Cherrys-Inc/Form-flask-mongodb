{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"acceptedMimeTypes\", \"description\", \"disabled\", \"hint\", \"isRequired\", \"label\", \"labelFor\", \"maxFiles\", \"maxSizeInBytes\", \"onAccepted\", \"onChange\", \"onRejected\", \"onRemove\", \"renderFile\", \"validationMessage\", \"values\"],\n    _excluded2 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef, useState, useRef, useCallback } from 'react';\nimport isEmpty from 'lodash.isempty';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { Key } from '../../constants';\nimport { FormField } from '../../form-field';\nimport { useStyleConfig } from '../../hooks';\nimport { UploadIcon } from '../../icons';\nimport arrayToCsv from '../../lib/array-to-csv';\nimport isFunction from '../../lib/is-function';\nimport safeInvoke from '../../lib/safe-invoke';\nimport { majorScale } from '../../scales';\nimport { useTheme } from '../../theme';\nimport { Text, Paragraph } from '../../typography';\nimport FileCard from './FileCard';\nimport getFileDataTransferItems from './utils/get-file-data-transfer-items';\nimport { getMaxFilesMessage } from './utils/messages';\nimport splitFiles from './utils/split-files';\nvar UploaderState = {\n  Initial: 'initial',\n  Dragging: 'dragging',\n  Error: 'error'\n};\nvar disabledPseudoSelector = \"&[aria-disabled='true']\";\nvar dragHoverPseudoSelector = \"&[data-state='\".concat(UploaderState.Dragging, \"']\");\nvar invalidPseudoSelector = \"&[aria-invalid='true']\";\nvar hoverPseudoSelector = \"&:hover:not(\".concat(disabledPseudoSelector, \"):not(\").concat(dragHoverPseudoSelector, \"):not(\").concat(invalidPseudoSelector, \")\");\nvar styleModifiers = {};\nvar pseudoSelectors = {\n  _focus: '&:focus',\n  _hover: hoverPseudoSelector,\n  _hoverBrowseCopy: \"\".concat(hoverPseudoSelector, \" span:first-of-type\"),\n  _hoverOrDragCopy: \"\".concat(hoverPseudoSelector, \" span:last-of-type\"),\n  _dragHover: dragHoverPseudoSelector,\n  _disabled: disabledPseudoSelector,\n  _invalid: invalidPseudoSelector\n};\nvar internalStyles = {};\nvar FileUploader = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (props, ref) {\n  var acceptedMimeTypes = props.acceptedMimeTypes,\n      description = props.description,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      hint = props.hint,\n      isRequired = props.isRequired,\n      label = props.label,\n      labelFor = props.labelFor,\n      maxFiles = props.maxFiles,\n      maxSizeInBytes = props.maxSizeInBytes,\n      onAccepted = props.onAccepted,\n      onChange = props.onChange,\n      onRejected = props.onRejected,\n      onRemove = props.onRemove,\n      renderFile = props.renderFile,\n      validationMessageProp = props.validationMessage,\n      values = props.values,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useStyleConfig = useStyleConfig('FileUploader', styleModifiers, pseudoSelectors, internalStyles),\n      className = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var _useState = useState(UploaderState.Initial),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      validationMessage = _useState4[0],\n      setValidationMessage = _useState4[1];\n  /**\n   * The underlying <input type=\"file\" /> DOM element won't accept the same file after it has been\n   * picked unless it is rerendered manually - if a user selects and removes a file, they should\n   * still be able to pick it again without refreshing the page.\n   * https://stackoverflow.com/a/45846251\n   */\n\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fileInputKey = _useState6[0],\n      setFileInputKey = _useState6[1];\n\n  var fileInputRef = useRef(null);\n  var orDragCopy = \"or drag \".concat(maxFiles === 1 ? 'a file' : 'files', \" here\"); // If the dropzone is meant to be a single file input and we already have a file, don't render\n  // the dropzone which will always result in rejected files/errors.\n\n  var renderDropzone = maxFiles !== 1 || isEmpty(values);\n  var resetState = useCallback(function () {\n    setState(UploaderState.Initial);\n    setValidationMessage('');\n  }, []);\n  var handleChange = useCallback(\n  /**\n   * @param {FileList} fileList\n   */\n  function (fileList) {\n    setFileInputKey(function (prev) {\n      return prev + 1;\n    });\n\n    if (isEmpty(fileList)) {\n      safeInvoke(onChange, []);\n      return;\n    }\n\n    var files = _toConsumableArray(fileList);\n\n    safeInvoke(onChange, files);\n\n    var _splitFiles = splitFiles(files, {\n      maxSizeInBytes: maxSizeInBytes,\n      acceptedMimeTypes: acceptedMimeTypes,\n      currentFileCount: values === null || values === void 0 ? void 0 : values.length,\n      maxFiles: maxFiles\n    }),\n        accepted = _splitFiles.accepted,\n        rejected = _splitFiles.rejected;\n\n    if (!isEmpty(accepted)) {\n      safeInvoke(onAccepted, accepted);\n    }\n\n    if (!isEmpty(rejected)) {\n      safeInvoke(onRejected, rejected);\n    }\n  }, [acceptedMimeTypes, maxFiles, maxSizeInBytes, onAccepted, onChange, onRejected, values === null || values === void 0 ? void 0 : values.length]);\n  var handleClick = useCallback(function () {\n    if (disabled) {\n      return;\n    }\n\n    if (fileInputRef.current == null) {\n      return;\n    }\n\n    fileInputRef.current.click();\n  }, [disabled]);\n  var handleDragOver = useCallback(\n  /**\n   * @param {React.DragEvent<HTMLDivElement>} event\n   */\n  function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.dataTransfer.dropEffect = 'copy';\n\n    if (disabled) {\n      return;\n    }\n\n    var dragItems = getFileDataTransferItems(event.dataTransfer.items);\n    var draggingCount = dragItems.length;\n\n    var _ref = values !== null && values !== void 0 ? values : [],\n        currentCount = _ref.length;\n\n    if (maxFiles == null || maxFiles < 0) {\n      setState(UploaderState.Dragging);\n      return;\n    }\n\n    if (draggingCount > maxFiles || draggingCount + currentCount > maxFiles) {\n      setValidationMessage(getMaxFilesMessage(maxFiles));\n      setState(UploaderState.Error);\n      return;\n    }\n\n    setState(UploaderState.Dragging);\n  }, [disabled, maxFiles, values]);\n  var handleDragLeave = useCallback(function () {\n    return resetState();\n  }, [resetState]);\n  var handleDrop = useCallback(\n  /**\n   * @param {React.DragEvent<HTMLDivElement>} event\n   */\n  function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (disabled) {\n      return;\n    }\n\n    resetState();\n    handleChange(event.dataTransfer.files);\n  }, [disabled, handleChange, resetState]);\n  var handleInputChange = useCallback(\n  /**\n   * @param {React.ChangeEvent<HTMLInputElement>} event\n   */\n  function (event) {\n    // Theoretically the input should not be accessible at all when disabled,\n    // but this should act as a safeguard\n    if (disabled) {\n      return;\n    }\n\n    handleChange(event.target.files);\n  }, [disabled, handleChange]);\n  var handleKeyDown = useCallback(\n  /**\n   * @param {React.KeyboardEvent<HTMLDivElement>} event\n   */\n  function (event) {\n    if (event.key !== Key.Enter && event.key !== Key.Space) {\n      return;\n    }\n\n    event.preventDefault();\n    handleClick();\n  }, [handleClick]);\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: label,\n    labelFor: labelFor,\n    description: description,\n    hint: hint,\n    isRequired: isRequired // Always override the validationMessage from prop if we have a message to display from dragging\n    ,\n    validationMessage: !isEmpty(validationMessage) ? /*#__PURE__*/React.createElement(Text, {\n      color: colors.red500\n    }, validationMessage) : validationMessageProp\n  }, renderDropzone && /*#__PURE__*/React.createElement(Box, _extends({\n    \"aria-disabled\": disabled,\n    \"aria-invalid\": state === UploaderState.Error,\n    className: className,\n    \"data-state\": state,\n    onClick: handleClick,\n    onDragLeave: handleDragLeave,\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    onKeyDown: handleKeyDown,\n    tabIndex: disabled ? undefined : 0\n  }, boxProps, rest), /*#__PURE__*/React.createElement(Box, {\n    accept: arrayToCsv(acceptedMimeTypes),\n    display: \"none\",\n    is: \"input\",\n    tabIndex: -1,\n    key: fileInputKey,\n    multiple: maxFiles !== 1,\n    onChange: handleInputChange,\n    ref: fileInputRef,\n    type: \"file\"\n  }), /*#__PURE__*/React.createElement(Box, {\n    alignItems: \"center\",\n    backgroundColor: disabled ? colors.gray90 : colors.gray200,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    height: majorScale(7),\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    width: majorScale(7)\n  }, /*#__PURE__*/React.createElement(UploadIcon, {\n    color: disabled ? colors.gray400 : colors.gray500,\n    size: majorScale(3)\n  })), /*#__PURE__*/React.createElement(Paragraph, {\n    marginTop: majorScale(3),\n    pointerEvents: \"none\"\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: disabled ? colors.gray500 : colors.blue400\n  }, \"Browse \"), /*#__PURE__*/React.createElement(Text, {\n    color: disabled ? colors.gray500 : colors.gray700\n  }, orDragCopy)))), /*#__PURE__*/React.createElement(Box, {\n    marginTop: majorScale(2)\n  }, values === null || values === void 0 ? void 0 : values.map(\n  /**\n   * @param {File} file\n   * @param {number} index\n   */\n  function (file, index) {\n    return isFunction(renderFile) ? renderFile(file, index) : /*#__PURE__*/React.createElement(FileCard, {\n      key: \"\".concat(file.name, \"-\").concat(index),\n      name: file.name,\n      onRemove: isFunction(onRemove) ? function () {\n        return onRemove(file);\n      } : undefined,\n      sizeInBytes: file.size,\n      type: file.type\n    });\n  })));\n}));\nFileUploader.propTypes = _objectSpread(_objectSpread({}, FormField.propTypes), {}, {\n  /**\n   * MIME types (not file extensions) to accept\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n   */\n  acceptedMimeTypes: PropTypes.array,\n\n  /**\n   * When true, displays a disabled state where drops don't fire and the native browser picker doesn't open\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Maximum number of files to accept\n   */\n  maxFiles: PropTypes.number,\n\n  /**\n   * Maximum size of an **individual** file to accept\n   */\n  maxSizeInBytes: PropTypes.number,\n\n  /**\n   * Callback for when files are accepted via drop or the native browser picker\n   * @type {(files: File[]) => void}\n   */\n  onAccepted: PropTypes.func,\n\n  /**\n   * Callback for when files are added via drop or the native browser picker, which includes both\n   * the accepted and rejected files\n   * @type {(files: File[]) => void}\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback for when files are rejected via drop or the native browser picker\n   * @type {(fileRejections: FileRejection[]) => void}\n   */\n  onRejected: PropTypes.func,\n\n  /**\n   * Callback to fire when a file should be removed\n   * @type {(file: File) => void}\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * Custom render function for displaying the file underneath the uploader\n   * @type {(file: File, index: number) => React.ReactNode}\n   */\n  renderFile: PropTypes.func,\n\n  /**\n   * File values to render underneath the uploader\n   * @type {File}\n   */\n  values: PropTypes.array\n});\nexport default FileUploader;","map":{"version":3,"names":["_defineProperty","_extends","_toConsumableArray","_slicedToArray","_objectWithoutProperties","_excluded","_excluded2","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","memo","forwardRef","useState","useRef","useCallback","isEmpty","PropTypes","Box","Key","FormField","useStyleConfig","UploadIcon","arrayToCsv","isFunction","safeInvoke","majorScale","useTheme","Text","Paragraph","FileCard","getFileDataTransferItems","getMaxFilesMessage","splitFiles","UploaderState","Initial","Dragging","Error","disabledPseudoSelector","dragHoverPseudoSelector","concat","invalidPseudoSelector","hoverPseudoSelector","styleModifiers","pseudoSelectors","_focus","_hover","_hoverBrowseCopy","_hoverOrDragCopy","_dragHover","_disabled","_invalid","internalStyles","FileUploader","props","ref","acceptedMimeTypes","description","_props$disabled","disabled","hint","isRequired","label","labelFor","maxFiles","maxSizeInBytes","onAccepted","onChange","onRejected","onRemove","renderFile","validationMessageProp","validationMessage","values","rest","_useTheme","colors","_useStyleConfig","className","boxProps","_useState","_useState2","state","setState","_useState3","_useState4","setValidationMessage","_useState5","_useState6","fileInputKey","setFileInputKey","fileInputRef","orDragCopy","renderDropzone","resetState","handleChange","fileList","prev","files","_splitFiles","currentFileCount","accepted","rejected","handleClick","current","click","handleDragOver","event","preventDefault","stopPropagation","dataTransfer","dropEffect","dragItems","items","draggingCount","_ref","currentCount","handleDragLeave","handleDrop","handleInputChange","handleKeyDown","Enter","Space","createElement","color","red500","onClick","onDragLeave","onDragOver","onDrop","onKeyDown","tabIndex","undefined","accept","display","is","multiple","type","alignItems","backgroundColor","gray90","gray200","borderRadius","height","justifyContent","pointerEvents","width","gray400","gray500","size","marginTop","blue400","gray700","map","file","index","name","sizeInBytes","propTypes","array","bool","number","func"],"sources":["C:/Users/anish/auth-final/node_modules/evergreen-ui/esm/file-uploader/src/FileUploader.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"acceptedMimeTypes\", \"description\", \"disabled\", \"hint\", \"isRequired\", \"label\", \"labelFor\", \"maxFiles\", \"maxSizeInBytes\", \"onAccepted\", \"onChange\", \"onRejected\", \"onRemove\", \"renderFile\", \"validationMessage\", \"values\"],\n    _excluded2 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, forwardRef, useState, useRef, useCallback } from 'react';\nimport isEmpty from 'lodash.isempty';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { Key } from '../../constants';\nimport { FormField } from '../../form-field';\nimport { useStyleConfig } from '../../hooks';\nimport { UploadIcon } from '../../icons';\nimport arrayToCsv from '../../lib/array-to-csv';\nimport isFunction from '../../lib/is-function';\nimport safeInvoke from '../../lib/safe-invoke';\nimport { majorScale } from '../../scales';\nimport { useTheme } from '../../theme';\nimport { Text, Paragraph } from '../../typography';\nimport FileCard from './FileCard';\nimport getFileDataTransferItems from './utils/get-file-data-transfer-items';\nimport { getMaxFilesMessage } from './utils/messages';\nimport splitFiles from './utils/split-files';\nvar UploaderState = {\n  Initial: 'initial',\n  Dragging: 'dragging',\n  Error: 'error'\n};\nvar disabledPseudoSelector = \"&[aria-disabled='true']\";\nvar dragHoverPseudoSelector = \"&[data-state='\".concat(UploaderState.Dragging, \"']\");\nvar invalidPseudoSelector = \"&[aria-invalid='true']\";\nvar hoverPseudoSelector = \"&:hover:not(\".concat(disabledPseudoSelector, \"):not(\").concat(dragHoverPseudoSelector, \"):not(\").concat(invalidPseudoSelector, \")\");\nvar styleModifiers = {};\nvar pseudoSelectors = {\n  _focus: '&:focus',\n  _hover: hoverPseudoSelector,\n  _hoverBrowseCopy: \"\".concat(hoverPseudoSelector, \" span:first-of-type\"),\n  _hoverOrDragCopy: \"\".concat(hoverPseudoSelector, \" span:last-of-type\"),\n  _dragHover: dragHoverPseudoSelector,\n  _disabled: disabledPseudoSelector,\n  _invalid: invalidPseudoSelector\n};\nvar internalStyles = {};\nvar FileUploader = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (props, ref) {\n  var acceptedMimeTypes = props.acceptedMimeTypes,\n      description = props.description,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      hint = props.hint,\n      isRequired = props.isRequired,\n      label = props.label,\n      labelFor = props.labelFor,\n      maxFiles = props.maxFiles,\n      maxSizeInBytes = props.maxSizeInBytes,\n      onAccepted = props.onAccepted,\n      onChange = props.onChange,\n      onRejected = props.onRejected,\n      onRemove = props.onRemove,\n      renderFile = props.renderFile,\n      validationMessageProp = props.validationMessage,\n      values = props.values,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useStyleConfig = useStyleConfig('FileUploader', styleModifiers, pseudoSelectors, internalStyles),\n      className = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var _useState = useState(UploaderState.Initial),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      validationMessage = _useState4[0],\n      setValidationMessage = _useState4[1];\n  /**\n   * The underlying <input type=\"file\" /> DOM element won't accept the same file after it has been\n   * picked unless it is rerendered manually - if a user selects and removes a file, they should\n   * still be able to pick it again without refreshing the page.\n   * https://stackoverflow.com/a/45846251\n   */\n\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fileInputKey = _useState6[0],\n      setFileInputKey = _useState6[1];\n\n  var fileInputRef = useRef(null);\n  var orDragCopy = \"or drag \".concat(maxFiles === 1 ? 'a file' : 'files', \" here\"); // If the dropzone is meant to be a single file input and we already have a file, don't render\n  // the dropzone which will always result in rejected files/errors.\n\n  var renderDropzone = maxFiles !== 1 || isEmpty(values);\n  var resetState = useCallback(function () {\n    setState(UploaderState.Initial);\n    setValidationMessage('');\n  }, []);\n  var handleChange = useCallback(\n  /**\n   * @param {FileList} fileList\n   */\n  function (fileList) {\n    setFileInputKey(function (prev) {\n      return prev + 1;\n    });\n\n    if (isEmpty(fileList)) {\n      safeInvoke(onChange, []);\n      return;\n    }\n\n    var files = _toConsumableArray(fileList);\n\n    safeInvoke(onChange, files);\n\n    var _splitFiles = splitFiles(files, {\n      maxSizeInBytes: maxSizeInBytes,\n      acceptedMimeTypes: acceptedMimeTypes,\n      currentFileCount: values === null || values === void 0 ? void 0 : values.length,\n      maxFiles: maxFiles\n    }),\n        accepted = _splitFiles.accepted,\n        rejected = _splitFiles.rejected;\n\n    if (!isEmpty(accepted)) {\n      safeInvoke(onAccepted, accepted);\n    }\n\n    if (!isEmpty(rejected)) {\n      safeInvoke(onRejected, rejected);\n    }\n  }, [acceptedMimeTypes, maxFiles, maxSizeInBytes, onAccepted, onChange, onRejected, values === null || values === void 0 ? void 0 : values.length]);\n  var handleClick = useCallback(function () {\n    if (disabled) {\n      return;\n    }\n\n    if (fileInputRef.current == null) {\n      return;\n    }\n\n    fileInputRef.current.click();\n  }, [disabled]);\n  var handleDragOver = useCallback(\n  /**\n   * @param {React.DragEvent<HTMLDivElement>} event\n   */\n  function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.dataTransfer.dropEffect = 'copy';\n\n    if (disabled) {\n      return;\n    }\n\n    var dragItems = getFileDataTransferItems(event.dataTransfer.items);\n    var draggingCount = dragItems.length;\n\n    var _ref = values !== null && values !== void 0 ? values : [],\n        currentCount = _ref.length;\n\n    if (maxFiles == null || maxFiles < 0) {\n      setState(UploaderState.Dragging);\n      return;\n    }\n\n    if (draggingCount > maxFiles || draggingCount + currentCount > maxFiles) {\n      setValidationMessage(getMaxFilesMessage(maxFiles));\n      setState(UploaderState.Error);\n      return;\n    }\n\n    setState(UploaderState.Dragging);\n  }, [disabled, maxFiles, values]);\n  var handleDragLeave = useCallback(function () {\n    return resetState();\n  }, [resetState]);\n  var handleDrop = useCallback(\n  /**\n   * @param {React.DragEvent<HTMLDivElement>} event\n   */\n  function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (disabled) {\n      return;\n    }\n\n    resetState();\n    handleChange(event.dataTransfer.files);\n  }, [disabled, handleChange, resetState]);\n  var handleInputChange = useCallback(\n  /**\n   * @param {React.ChangeEvent<HTMLInputElement>} event\n   */\n  function (event) {\n    // Theoretically the input should not be accessible at all when disabled,\n    // but this should act as a safeguard\n    if (disabled) {\n      return;\n    }\n\n    handleChange(event.target.files);\n  }, [disabled, handleChange]);\n  var handleKeyDown = useCallback(\n  /**\n   * @param {React.KeyboardEvent<HTMLDivElement>} event\n   */\n  function (event) {\n    if (event.key !== Key.Enter && event.key !== Key.Space) {\n      return;\n    }\n\n    event.preventDefault();\n    handleClick();\n  }, [handleClick]);\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: label,\n    labelFor: labelFor,\n    description: description,\n    hint: hint,\n    isRequired: isRequired // Always override the validationMessage from prop if we have a message to display from dragging\n    ,\n    validationMessage: !isEmpty(validationMessage) ? /*#__PURE__*/React.createElement(Text, {\n      color: colors.red500\n    }, validationMessage) : validationMessageProp\n  }, renderDropzone && /*#__PURE__*/React.createElement(Box, _extends({\n    \"aria-disabled\": disabled,\n    \"aria-invalid\": state === UploaderState.Error,\n    className: className,\n    \"data-state\": state,\n    onClick: handleClick,\n    onDragLeave: handleDragLeave,\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    onKeyDown: handleKeyDown,\n    tabIndex: disabled ? undefined : 0\n  }, boxProps, rest), /*#__PURE__*/React.createElement(Box, {\n    accept: arrayToCsv(acceptedMimeTypes),\n    display: \"none\",\n    is: \"input\",\n    tabIndex: -1,\n    key: fileInputKey,\n    multiple: maxFiles !== 1,\n    onChange: handleInputChange,\n    ref: fileInputRef,\n    type: \"file\"\n  }), /*#__PURE__*/React.createElement(Box, {\n    alignItems: \"center\",\n    backgroundColor: disabled ? colors.gray90 : colors.gray200,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    height: majorScale(7),\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    width: majorScale(7)\n  }, /*#__PURE__*/React.createElement(UploadIcon, {\n    color: disabled ? colors.gray400 : colors.gray500,\n    size: majorScale(3)\n  })), /*#__PURE__*/React.createElement(Paragraph, {\n    marginTop: majorScale(3),\n    pointerEvents: \"none\"\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: disabled ? colors.gray500 : colors.blue400\n  }, \"Browse \"), /*#__PURE__*/React.createElement(Text, {\n    color: disabled ? colors.gray500 : colors.gray700\n  }, orDragCopy)))), /*#__PURE__*/React.createElement(Box, {\n    marginTop: majorScale(2)\n  }, values === null || values === void 0 ? void 0 : values.map(\n  /**\n   * @param {File} file\n   * @param {number} index\n   */\n  function (file, index) {\n    return isFunction(renderFile) ? renderFile(file, index) : /*#__PURE__*/React.createElement(FileCard, {\n      key: \"\".concat(file.name, \"-\").concat(index),\n      name: file.name,\n      onRemove: isFunction(onRemove) ? function () {\n        return onRemove(file);\n      } : undefined,\n      sizeInBytes: file.size,\n      type: file.type\n    });\n  })));\n}));\nFileUploader.propTypes = _objectSpread(_objectSpread({}, FormField.propTypes), {}, {\n  /**\n   * MIME types (not file extensions) to accept\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n   */\n  acceptedMimeTypes: PropTypes.array,\n\n  /**\n   * When true, displays a disabled state where drops don't fire and the native browser picker doesn't open\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Maximum number of files to accept\n   */\n  maxFiles: PropTypes.number,\n\n  /**\n   * Maximum size of an **individual** file to accept\n   */\n  maxSizeInBytes: PropTypes.number,\n\n  /**\n   * Callback for when files are accepted via drop or the native browser picker\n   * @type {(files: File[]) => void}\n   */\n  onAccepted: PropTypes.func,\n\n  /**\n   * Callback for when files are added via drop or the native browser picker, which includes both\n   * the accepted and rejected files\n   * @type {(files: File[]) => void}\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback for when files are rejected via drop or the native browser picker\n   * @type {(fileRejections: FileRejection[]) => void}\n   */\n  onRejected: PropTypes.func,\n\n  /**\n   * Callback to fire when a file should be removed\n   * @type {(file: File) => void}\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * Custom render function for displaying the file underneath the uploader\n   * @type {(file: File, index: number) => React.ReactNode}\n   */\n  renderFile: PropTypes.func,\n\n  /**\n   * File values to render underneath the uploader\n   * @type {File}\n   */\n  values: PropTypes.array\n});\nexport default FileUploader;"],"mappings":"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"},"metadata":{},"sourceType":"module"}