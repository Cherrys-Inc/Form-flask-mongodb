{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"color\", \"icon\", \"size\", \"title\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIs from 'react-is';\nimport Box from 'ui-box';\n/**\n * This is an internal helper component for rendering custom or Evergreen icons\n * Box props are applied to the outer Box container, and Evergreen icon-specific props are added to the icon element.\n */\n\nexport var IconWrapper = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Icon(_ref, ref) {\n  var color = _ref.color,\n      icon = _ref.icon,\n      size = _ref.size,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  if (!icon || typeof icon === 'string') {\n    return null;\n  }\n\n  var iconProps = {\n    color: color,\n    size: size,\n    title: title\n  };\n  var iconWithProps = null;\n\n  if (ReactIs.isValidElementType(icon)) {\n    var Component = icon;\n    iconWithProps = /*#__PURE__*/React.createElement(Component, _extends({\n      ref: ref\n    }, iconProps));\n  } else if ( /*#__PURE__*/React.isValidElement(icon)) {\n    iconWithProps = /*#__PURE__*/React.cloneElement(icon, _objectSpread(_objectSpread(_objectSpread({}, iconProps), icon.props), {}, {\n      ref: ref\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    display: \"inline-flex\"\n  }, props), iconWithProps);\n}));\nIconWrapper.propTypes = {\n  /**\n   * Color of icon. Equivalent to setting CSS `fill` property.\n   */\n  color: PropTypes.string,\n\n  /**\n   * The icon component - whether an Evergreen icon or a custom icon node:\n   *\n   * - If `null` or `undefined` or `false`, this component will render nothing.\n   * - If given a `JSX.Element`, that element will be rendered, with size/color/title props cloned into it\n   * - If given a React element type, it will be rendered with the other icon props\n   *   As a consumer, you should never use `<IconWrapper icon={<element />}` directly; simply render `<element />` instead.\n   */\n  icon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * Size of the icon, in pixels.\n   * Icons contains 16px and 20px SVG icon paths,\n   * and chooses the appropriate resolution based on this prop.\n   */\n  size: PropTypes.number,\n\n  /**\n   * Description string.\n   * Browsers usually render this as a tooltip on hover, whereas screen\n   * readers will use it for aural feedback.\n   * By default, this is set to the icon's name for accessibility.\n   */\n  title: PropTypes.string\n};","map":{"version":3,"names":["_defineProperty","_extends","_objectWithoutProperties","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","forwardRef","memo","PropTypes","ReactIs","Box","IconWrapper","Icon","_ref","ref","color","icon","size","title","props","iconProps","iconWithProps","isValidElementType","Component","createElement","isValidElement","cloneElement","display","propTypes","string","oneOfType","elementType","element","number"],"sources":["C:/Users/anish/auth-final/node_modules/evergreen-ui/esm/icons/src/IconWrapper.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"color\", \"icon\", \"size\", \"title\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { forwardRef, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIs from 'react-is';\nimport Box from 'ui-box';\n/**\n * This is an internal helper component for rendering custom or Evergreen icons\n * Box props are applied to the outer Box container, and Evergreen icon-specific props are added to the icon element.\n */\n\nexport var IconWrapper = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Icon(_ref, ref) {\n  var color = _ref.color,\n      icon = _ref.icon,\n      size = _ref.size,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  if (!icon || typeof icon === 'string') {\n    return null;\n  }\n\n  var iconProps = {\n    color: color,\n    size: size,\n    title: title\n  };\n  var iconWithProps = null;\n\n  if (ReactIs.isValidElementType(icon)) {\n    var Component = icon;\n    iconWithProps = /*#__PURE__*/React.createElement(Component, _extends({\n      ref: ref\n    }, iconProps));\n  } else if ( /*#__PURE__*/React.isValidElement(icon)) {\n    iconWithProps = /*#__PURE__*/React.cloneElement(icon, _objectSpread(_objectSpread(_objectSpread({}, iconProps), icon.props), {}, {\n      ref: ref\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    display: \"inline-flex\"\n  }, props), iconWithProps);\n}));\nIconWrapper.propTypes = {\n  /**\n   * Color of icon. Equivalent to setting CSS `fill` property.\n   */\n  color: PropTypes.string,\n\n  /**\n   * The icon component - whether an Evergreen icon or a custom icon node:\n   *\n   * - If `null` or `undefined` or `false`, this component will render nothing.\n   * - If given a `JSX.Element`, that element will be rendered, with size/color/title props cloned into it\n   * - If given a React element type, it will be rendered with the other icon props\n   *   As a consumer, you should never use `<IconWrapper icon={<element />}` directly; simply render `<element />` instead.\n   */\n  icon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * Size of the icon, in pixels.\n   * Icons contains 16px and 20px SVG icon paths,\n   * and chooses the appropriate resolution based on this prop.\n   */\n  size: PropTypes.number,\n\n  /**\n   * Description string.\n   * Browsers usually render this as a tooltip on hover, whereas screen\n   * readers will use it for aural feedback.\n   * By default, this is set to the icon's name for accessibility.\n   */\n  title: PropTypes.string\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}