{"ast":null,"code":"import { MimeType } from '../../../constants';\n/**\n * Returns the corresponding file extension from the provided MimeType.\n * @param {string} mimeType\n * @returns {string | undefined} Mapped file extension from the MimeType, or `undefined` if not found\n */\n\nvar mimeTypeToExtension = function mimeTypeToExtension(mimeType) {\n  var keys = Object.keys(MimeType);\n  var key = keys.find(function (key) {\n    return MimeType[key] === mimeType;\n  });\n\n  if (key == null) {\n    return undefined;\n  }\n\n  return \".\".concat(key);\n};\n\nexport default mimeTypeToExtension;","map":{"version":3,"names":["MimeType","mimeTypeToExtension","mimeType","keys","Object","key","find","undefined","concat"],"sources":["C:/Users/anish/auth-final/node_modules/evergreen-ui/esm/file-uploader/src/utils/mime-type-to-extension.js"],"sourcesContent":["import { MimeType } from '../../../constants';\n/**\n * Returns the corresponding file extension from the provided MimeType.\n * @param {string} mimeType\n * @returns {string | undefined} Mapped file extension from the MimeType, or `undefined` if not found\n */\n\nvar mimeTypeToExtension = function mimeTypeToExtension(mimeType) {\n  var keys = Object.keys(MimeType);\n  var key = keys.find(function (key) {\n    return MimeType[key] === mimeType;\n  });\n\n  if (key == null) {\n    return undefined;\n  }\n\n  return \".\".concat(key);\n};\n\nexport default mimeTypeToExtension;"],"mappings":"AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,QAA7B,EAAuC;EAC/D,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,QAAZ,CAAX;EACA,IAAIK,GAAG,GAAGF,IAAI,CAACG,IAAL,CAAU,UAAUD,GAAV,EAAe;IACjC,OAAOL,QAAQ,CAACK,GAAD,CAAR,KAAkBH,QAAzB;EACD,CAFS,CAAV;;EAIA,IAAIG,GAAG,IAAI,IAAX,EAAiB;IACf,OAAOE,SAAP;EACD;;EAED,OAAO,IAAIC,MAAJ,CAAWH,GAAX,CAAP;AACD,CAXD;;AAaA,eAAeJ,mBAAf"},"metadata":{},"sourceType":"module"}