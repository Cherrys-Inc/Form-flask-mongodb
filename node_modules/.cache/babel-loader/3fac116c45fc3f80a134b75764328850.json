{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst prefixer_1 = __importDefault(require(\"./prefixer\"));\n\nconst value_to_string_1 = __importDefault(require(\"./value-to-string\"));\n\nconst get_class_name_1 = __importDefault(require(\"./get-class-name\"));\n\nfunction getCss(propertyInfo, value) {\n  let rules;\n  const valueType = typeof value;\n\n  if (valueType !== 'string' && valueType !== 'number') {\n    if (process.env.NODE_ENV !== 'production') {\n      const name = propertyInfo.jsName;\n      const encodedValue = JSON.stringify(value);\n      console.error(`📦 ui-box: property “${name}” was passed invalid value “${encodedValue}”. Only numbers and strings are supported.`);\n    }\n\n    return null;\n  }\n\n  const valueString = value_to_string_1.default(value, propertyInfo.defaultUnit);\n  const className = get_class_name_1.default(propertyInfo, valueString);\n\n  if (propertyInfo.isPrefixed) {\n    rules = prefixer_1.default(propertyInfo.jsName || '', valueString);\n  } else {\n    rules = [{\n      property: propertyInfo.cssName || '',\n      value: valueString\n    }];\n  }\n\n  let styles;\n\n  if (process.env.NODE_ENV === 'production') {\n    const rulesString = rules.map(rule => `${rule.property}:${rule.value}`).join(';');\n    styles = `.${className}{${rulesString}}`;\n  } else {\n    const rulesString = rules.map(rule => `  ${rule.property}: ${rule.value};`).join('\\n');\n    styles = `\n.${className} {\n${rulesString}\n}`;\n  }\n\n  return {\n    className,\n    styles\n  };\n}\n\nexports.default = getCss;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","prefixer_1","require","value_to_string_1","get_class_name_1","getCss","propertyInfo","rules","valueType","process","env","NODE_ENV","name","jsName","encodedValue","JSON","stringify","console","error","valueString","default","defaultUnit","className","isPrefixed","property","cssName","styles","rulesString","map","rule","join"],"sources":["C:/Users/anish/auth-final/node_modules/ui-box/dist/src/get-css.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst prefixer_1 = __importDefault(require(\"./prefixer\"));\nconst value_to_string_1 = __importDefault(require(\"./value-to-string\"));\nconst get_class_name_1 = __importDefault(require(\"./get-class-name\"));\nfunction getCss(propertyInfo, value) {\n    let rules;\n    const valueType = typeof value;\n    if (valueType !== 'string' && valueType !== 'number') {\n        if (process.env.NODE_ENV !== 'production') {\n            const name = propertyInfo.jsName;\n            const encodedValue = JSON.stringify(value);\n            console.error(`📦 ui-box: property “${name}” was passed invalid value “${encodedValue}”. Only numbers and strings are supported.`);\n        }\n        return null;\n    }\n    const valueString = value_to_string_1.default(value, propertyInfo.defaultUnit);\n    const className = get_class_name_1.default(propertyInfo, valueString);\n    if (propertyInfo.isPrefixed) {\n        rules = prefixer_1.default(propertyInfo.jsName || '', valueString);\n    }\n    else {\n        rules = [{ property: propertyInfo.cssName || '', value: valueString }];\n    }\n    let styles;\n    if (process.env.NODE_ENV === 'production') {\n        const rulesString = rules\n            .map(rule => `${rule.property}:${rule.value}`)\n            .join(';');\n        styles = `.${className}{${rulesString}}`;\n    }\n    else {\n        const rulesString = rules\n            .map(rule => `  ${rule.property}: ${rule.value};`)\n            .join('\\n');\n        styles = `\n.${className} {\n${rulesString}\n}`;\n    }\n    return { className, styles };\n}\nexports.default = getCss;\n"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;IAAE,WAAWA;EAAb,CAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,UAAU,GAAGP,eAAe,CAACQ,OAAO,CAAC,YAAD,CAAR,CAAlC;;AACA,MAAMC,iBAAiB,GAAGT,eAAe,CAACQ,OAAO,CAAC,mBAAD,CAAR,CAAzC;;AACA,MAAME,gBAAgB,GAAGV,eAAe,CAACQ,OAAO,CAAC,kBAAD,CAAR,CAAxC;;AACA,SAASG,MAAT,CAAgBC,YAAhB,EAA8BN,KAA9B,EAAqC;EACjC,IAAIO,KAAJ;EACA,MAAMC,SAAS,GAAG,OAAOR,KAAzB;;EACA,IAAIQ,SAAS,KAAK,QAAd,IAA0BA,SAAS,KAAK,QAA5C,EAAsD;IAClD,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACvC,MAAMC,IAAI,GAAGN,YAAY,CAACO,MAA1B;MACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAehB,KAAf,CAArB;MACAiB,OAAO,CAACC,KAAR,CAAe,wBAAuBN,IAAK,+BAA8BE,YAAa,4CAAtF;IACH;;IACD,OAAO,IAAP;EACH;;EACD,MAAMK,WAAW,GAAGhB,iBAAiB,CAACiB,OAAlB,CAA0BpB,KAA1B,EAAiCM,YAAY,CAACe,WAA9C,CAApB;EACA,MAAMC,SAAS,GAAGlB,gBAAgB,CAACgB,OAAjB,CAAyBd,YAAzB,EAAuCa,WAAvC,CAAlB;;EACA,IAAIb,YAAY,CAACiB,UAAjB,EAA6B;IACzBhB,KAAK,GAAGN,UAAU,CAACmB,OAAX,CAAmBd,YAAY,CAACO,MAAb,IAAuB,EAA1C,EAA8CM,WAA9C,CAAR;EACH,CAFD,MAGK;IACDZ,KAAK,GAAG,CAAC;MAAEiB,QAAQ,EAAElB,YAAY,CAACmB,OAAb,IAAwB,EAApC;MAAwCzB,KAAK,EAAEmB;IAA/C,CAAD,CAAR;EACH;;EACD,IAAIO,MAAJ;;EACA,IAAIjB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACvC,MAAMgB,WAAW,GAAGpB,KAAK,CACpBqB,GADe,CACXC,IAAI,IAAK,GAAEA,IAAI,CAACL,QAAS,IAAGK,IAAI,CAAC7B,KAAM,EAD5B,EAEf8B,IAFe,CAEV,GAFU,CAApB;IAGAJ,MAAM,GAAI,IAAGJ,SAAU,IAAGK,WAAY,GAAtC;EACH,CALD,MAMK;IACD,MAAMA,WAAW,GAAGpB,KAAK,CACpBqB,GADe,CACXC,IAAI,IAAK,KAAIA,IAAI,CAACL,QAAS,KAAIK,IAAI,CAAC7B,KAAM,GAD/B,EAEf8B,IAFe,CAEV,IAFU,CAApB;IAGAJ,MAAM,GAAI;AAClB,GAAGJ,SAAU;AACb,EAAEK,WAAY;AACd,EAHQ;EAIH;;EACD,OAAO;IAAEL,SAAF;IAAaI;EAAb,CAAP;AACH;;AACD3B,OAAO,CAACqB,OAAR,GAAkBf,MAAlB"},"metadata":{},"sourceType":"script"}