{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anish\\\\auth-final\\\\src\\\\Components\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  const signinGoogle = () => {\n    signInWithPopup(auth, provider).then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken; // The signed-in user info.\n\n      const user = result.user;\n      localStorage.setItem(\"user\", JSON.stringify({\n        name: user.displayName,\n        email: user.email,\n        uid: user.uid\n      }));\n      dispatch(login(localStorage.getItem(\"user\")));\n      navigate(\"/profile\"); // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message; // The email of the user's account used.\n\n      const email = error.customData.email; // The AuthCredential type that was used.\n\n      const credential = GoogleAuthProvider.credentialFromError(error); // ...\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signinGoogle,\n        children: \"Sign In with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Login","signinGoogle","signInWithPopup","auth","provider","then","result","credential","GoogleAuthProvider","credentialFromResult","token","accessToken","user","localStorage","setItem","JSON","stringify","name","displayName","email","uid","dispatch","login","getItem","navigate","catch","error","errorCode","code","errorMessage","message","customData","credentialFromError"],"sources":["C:/Users/anish/auth-final/src/Components/Login.js"],"sourcesContent":["import React,{useState} from 'react';\r\n\r\n\r\n\r\n  \r\nconst Login = () => {\r\n    \r\n    \r\n    const signinGoogle=()=>{\r\n        signInWithPopup(auth, provider)\r\n            .then((result) => {\r\n                // This gives you a Google Access Token. You can use it to access the Google API.\r\n                const credential = GoogleAuthProvider.credentialFromResult(result);\r\n                const token = credential.accessToken;\r\n                // The signed-in user info.\r\n                const user = result.user;\r\n                localStorage.setItem(\"user\", JSON.stringify({name:user.displayName,\r\n                email:user.email,\r\n                uid:user.uid}))\r\n                dispatch(login(localStorage.getItem(\"user\")));\r\n\r\n                navigate(\"/profile\")\r\n\r\n               \r\n                // ...\r\n            }).catch((error) => {\r\n                // Handle Errors here.\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                // The email of the user's account used.\r\n                const email = error.customData.email;\r\n                // The AuthCredential type that was used.\r\n                const credential = GoogleAuthProvider.credentialFromError(error);\r\n                // ...\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n      \r\n    return (\r\n        <div>\r\n    \r\n                <center>\r\n                <button onClick={signinGoogle}>Sign In with Google</button>\r\n                </center>\r\n                \r\n            \r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;AAKA,MAAMC,KAAK,GAAG,MAAM;EAGhB,MAAMC,YAAY,GAAC,MAAI;IACnBC,eAAe,CAACC,IAAD,EAAOC,QAAP,CAAf,CACKC,IADL,CACWC,MAAD,IAAY;MACd;MACA,MAAMC,UAAU,GAAGC,kBAAkB,CAACC,oBAAnB,CAAwCH,MAAxC,CAAnB;MACA,MAAMI,KAAK,GAAGH,UAAU,CAACI,WAAzB,CAHc,CAId;;MACA,MAAMC,IAAI,GAAGN,MAAM,CAACM,IAApB;MACAC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe;QAACC,IAAI,EAACL,IAAI,CAACM,WAAX;QAC5CC,KAAK,EAACP,IAAI,CAACO,KADiC;QAE5CC,GAAG,EAACR,IAAI,CAACQ;MAFmC,CAAf,CAA7B;MAGAC,QAAQ,CAACC,KAAK,CAACT,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAD,CAAN,CAAR;MAEAC,QAAQ,CAAC,UAAD,CAAR,CAXc,CAcd;IACH,CAhBL,EAgBOC,KAhBP,CAgBcC,KAAD,IAAW;MAChB;MACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;MACA,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAHgB,CAIhB;;MACA,MAAMX,KAAK,GAAGO,KAAK,CAACK,UAAN,CAAiBZ,KAA/B,CALgB,CAMhB;;MACA,MAAMZ,UAAU,GAAGC,kBAAkB,CAACwB,mBAAnB,CAAuCN,KAAvC,CAAnB,CAPgB,CAQhB;IACH,CAzBL;EA2BH,CA5BD;;EAmCA,oBACI;IAAA,uBAEQ;MAAA,uBACA;QAAQ,OAAO,EAAEzB,YAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH,CAhDD;;KAAMD,K;AAkDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}