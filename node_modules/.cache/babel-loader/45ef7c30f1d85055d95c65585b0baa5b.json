{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anish\\\\auth-final\\\\src\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { auth, provider, fprovider } from \"../firebase\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, FacebookAuthProvider } from \"firebase/auth\";\nimport { login } from '../features/userSlice';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const mobverify = false;\n  useEffect(() => {\n    mobverify = localStorage.getItem(\"mobileVerfied\");\n  }, []);\n\n  function googleSignin() {\n    return signInWithPopup(auth, provider).then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken; // The signed-in user info.\n\n      const user = result.user;\n      localStorage.setItem(\"user\", JSON.stringify({\n        name: user.displayName,\n        email: user.email,\n        uid: user.uid,\n        mobileVerified: localStorage.getItem(\"mobileVerfied\")\n      }));\n      const details = localStorage.getItem(\"user\");\n      dispatch(login(details));\n      navigate(\"/profile\"); // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message; // The email of the user's account used.\n\n      const email = error.customData.email; // The AuthCredential type that was used.\n\n      const credential = GoogleAuthProvider.credentialFromError(error); // ...\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: googleSignin,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"google-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"google-icon-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"google-icon\",\n              src: \"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"btn-text\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Sign in with google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"C8M3Qnh2JtuXRaZXcPUyNRrk+zo=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","auth","provider","fprovider","getAuth","signInWithPopup","GoogleAuthProvider","FacebookAuthProvider","login","useDispatch","Login","navigate","dispatch","mobverify","useEffect","localStorage","getItem","googleSignin","then","result","credential","credentialFromResult","token","accessToken","user","setItem","JSON","stringify","name","displayName","email","uid","mobileVerified","details","catch","error","errorCode","code","errorMessage","message","customData","credentialFromError"],"sources":["C:/Users/anish/auth-final/src/Components/Login.js"],"sourcesContent":["import React,{useState} from 'react';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport {auth,provider,fprovider} from \"../firebase\"\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider ,FacebookAuthProvider} from \"firebase/auth\";\r\nimport { login } from '../features/userSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n  \r\nexport default function Login(){\r\n    \r\n    const navigate= useNavigate();\r\n    const dispatch = useDispatch();\r\n    const mobverify=false;\r\n    useEffect(() => {\r\n        mobverify=localStorage.getItem(\"mobileVerfied\")\r\n\r\n    }, [])\r\n    \r\n   function googleSignin(){\r\n    return(\r\n        \r\n        signInWithPopup(auth, provider)\r\n            .then((result) => {\r\n                // This gives you a Google Access Token. You can use it to access the Google API.\r\n                const credential = GoogleAuthProvider.credentialFromResult(result);\r\n                const token = credential.accessToken;\r\n                // The signed-in user info.\r\n                const user = result.user;\r\n                localStorage.setItem(\"user\", JSON.stringify({name:user.displayName,\r\n                email:user.email,\r\n                uid:user.uid,\r\n                mobileVerified:localStorage.getItem(\"mobileVerfied\")\r\n            }))\r\n                const details=localStorage.getItem(\"user\");\r\n                dispatch(login(details));\r\n\r\n                navigate(\"/profile\")\r\n\r\n               \r\n                // ...\r\n            }).catch((error) => {\r\n                // Handle Errors here.\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                // The email of the user's account used.\r\n                const email = error.customData.email;\r\n                // The AuthCredential type that was used.\r\n                const credential = GoogleAuthProvider.credentialFromError(error);\r\n                // ...\r\n            })\r\n\r\n    );\r\n   }\r\n\r\n\r\n\r\n\r\n      \r\n    return (\r\n        <div>\r\n    \r\n                <center>\r\n                <button onClick={googleSignin}>\r\n                <div className=\"google-btn\">\r\n                <div className=\"google-icon-wrapper\">\r\n                    <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"/>\r\n                </div>\r\n                <p className=\"btn-text\"><b>Sign in with google</b></p>\r\n                </div>\r\n                </button>\r\n                </center>\r\n                \r\n            \r\n        </div>\r\n    );\r\n}\r\n  \r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAAQC,IAAR,EAAaC,QAAb,EAAsBC,SAAtB,QAAsC,aAAtC;AACA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,EAAuDC,oBAAvD,QAAkF,eAAlF;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,eAAe,SAASC,KAAT,GAAgB;EAAA;;EAE3B,MAAMC,QAAQ,GAAEX,WAAW,EAA3B;EACA,MAAMY,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAMI,SAAS,GAAC,KAAhB;EACAC,SAAS,CAAC,MAAM;IACZD,SAAS,GAACE,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAV;EAEH,CAHQ,EAGN,EAHM,CAAT;;EAKD,SAASC,YAAT,GAAuB;IACtB,OAEIZ,eAAe,CAACJ,IAAD,EAAOC,QAAP,CAAf,CACKgB,IADL,CACWC,MAAD,IAAY;MACd;MACA,MAAMC,UAAU,GAAGd,kBAAkB,CAACe,oBAAnB,CAAwCF,MAAxC,CAAnB;MACA,MAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB,CAHc,CAId;;MACA,MAAMC,IAAI,GAAGL,MAAM,CAACK,IAApB;MACAT,YAAY,CAACU,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe;QAACC,IAAI,EAACJ,IAAI,CAACK,WAAX;QAC5CC,KAAK,EAACN,IAAI,CAACM,KADiC;QAE5CC,GAAG,EAACP,IAAI,CAACO,GAFmC;QAG5CC,cAAc,EAACjB,YAAY,CAACC,OAAb,CAAqB,eAArB;MAH6B,CAAf,CAA7B;MAKA,MAAMiB,OAAO,GAAClB,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd;MACAJ,QAAQ,CAACJ,KAAK,CAACyB,OAAD,CAAN,CAAR;MAEAtB,QAAQ,CAAC,UAAD,CAAR,CAdc,CAiBd;IACH,CAnBL,EAmBOuB,KAnBP,CAmBcC,KAAD,IAAW;MAChB;MACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;MACA,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAHgB,CAIhB;;MACA,MAAMT,KAAK,GAAGK,KAAK,CAACK,UAAN,CAAiBV,KAA/B,CALgB,CAMhB;;MACA,MAAMV,UAAU,GAAGd,kBAAkB,CAACmC,mBAAnB,CAAuCN,KAAvC,CAAnB,CAPgB,CAQhB;IACH,CA5BL,CAFJ;EAiCA;;EAMA,oBACI;IAAA,uBAEQ;MAAA,uBACA;QAAQ,OAAO,EAAElB,YAAjB;QAAA,uBACA;UAAK,SAAS,EAAC,YAAf;UAAA,wBACA;YAAK,SAAS,EAAC,qBAAf;YAAA,uBACI;cAAK,SAAS,EAAC,aAAf;cAA6B,GAAG,EAAC;YAAjC;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADA,eAIA;YAAG,SAAS,EAAC,UAAb;YAAA,uBAAwB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAxB;YAAA;YAAA;YAAA;UAAA,QAJA;QAAA;UAAA;UAAA;UAAA;QAAA;MADA;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GAnEuBP,K;UAEJV,W,EACCS,W;;;KAHGC,K"},"metadata":{},"sourceType":"module"}