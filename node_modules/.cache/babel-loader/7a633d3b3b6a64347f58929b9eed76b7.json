{"ast":null,"code":"import hyphenateProperty from 'css-in-js-utils/lib/hyphenateProperty';\nimport isPrefixedValue from 'css-in-js-utils/lib/isPrefixedValue';\nimport capitalizeString from '../utils/capitalizeString';\nvar properties = {\n  transition: true,\n  transitionProperty: true,\n  WebkitTransition: true,\n  WebkitTransitionProperty: true,\n  MozTransition: true,\n  MozTransitionProperty: true\n};\nvar prefixMapping = {\n  Webkit: '-webkit-',\n  Moz: '-moz-',\n  ms: '-ms-'\n};\n\nfunction prefixValue(value, propertyPrefixMap) {\n  if (isPrefixedValue(value)) {\n    return value;\n  } // only split multi values, not cubic beziers\n\n\n  var multipleValues = value.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g);\n\n  for (var i = 0, len = multipleValues.length; i < len; ++i) {\n    var singleValue = multipleValues[i];\n    var values = [singleValue];\n\n    for (var property in propertyPrefixMap) {\n      var dashCaseProperty = hyphenateProperty(property);\n\n      if (singleValue.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {\n        var prefixes = propertyPrefixMap[property];\n\n        for (var j = 0, pLen = prefixes.length; j < pLen; ++j) {\n          // join all prefixes and create a new value\n          values.unshift(singleValue.replace(dashCaseProperty, prefixMapping[prefixes[j]] + dashCaseProperty));\n        }\n      }\n    }\n\n    multipleValues[i] = values.join(',');\n  }\n\n  return multipleValues.join(',');\n}\n\nexport default function transition(property, value, style, propertyPrefixMap) {\n  // also check for already prefixed transitions\n  if (typeof value === 'string' && properties.hasOwnProperty(property)) {\n    var outputValue = prefixValue(value, propertyPrefixMap); // if the property is already prefixed\n\n    var webkitOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-moz-|-ms-/.test(val);\n    }).join(',');\n\n    if (property.indexOf('Webkit') > -1) {\n      return webkitOutput;\n    }\n\n    var mozOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-webkit-|-ms-/.test(val);\n    }).join(',');\n\n    if (property.indexOf('Moz') > -1) {\n      return mozOutput;\n    }\n\n    style['Webkit' + capitalizeString(property)] = webkitOutput;\n    style['Moz' + capitalizeString(property)] = mozOutput;\n    return outputValue;\n  }\n}","map":{"version":3,"names":["hyphenateProperty","isPrefixedValue","capitalizeString","properties","transition","transitionProperty","WebkitTransition","WebkitTransitionProperty","MozTransition","MozTransitionProperty","prefixMapping","Webkit","Moz","ms","prefixValue","value","propertyPrefixMap","multipleValues","split","i","len","length","singleValue","values","property","dashCaseProperty","indexOf","prefixes","j","pLen","unshift","replace","join","style","hasOwnProperty","outputValue","webkitOutput","filter","val","test","mozOutput"],"sources":["C:/Users/anish/auth-final/node_modules/ui-box/node_modules/inline-style-prefixer/es/plugins/transition.js"],"sourcesContent":["import hyphenateProperty from 'css-in-js-utils/lib/hyphenateProperty';\nimport isPrefixedValue from 'css-in-js-utils/lib/isPrefixedValue';\n\nimport capitalizeString from '../utils/capitalizeString';\n\nvar properties = {\n  transition: true,\n  transitionProperty: true,\n  WebkitTransition: true,\n  WebkitTransitionProperty: true,\n  MozTransition: true,\n  MozTransitionProperty: true\n};\n\nvar prefixMapping = {\n  Webkit: '-webkit-',\n  Moz: '-moz-',\n  ms: '-ms-'\n};\n\nfunction prefixValue(value, propertyPrefixMap) {\n  if (isPrefixedValue(value)) {\n    return value;\n  }\n\n  // only split multi values, not cubic beziers\n  var multipleValues = value.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g);\n\n  for (var i = 0, len = multipleValues.length; i < len; ++i) {\n    var singleValue = multipleValues[i];\n    var values = [singleValue];\n    for (var property in propertyPrefixMap) {\n      var dashCaseProperty = hyphenateProperty(property);\n\n      if (singleValue.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {\n        var prefixes = propertyPrefixMap[property];\n        for (var j = 0, pLen = prefixes.length; j < pLen; ++j) {\n          // join all prefixes and create a new value\n          values.unshift(singleValue.replace(dashCaseProperty, prefixMapping[prefixes[j]] + dashCaseProperty));\n        }\n      }\n    }\n\n    multipleValues[i] = values.join(',');\n  }\n\n  return multipleValues.join(',');\n}\n\nexport default function transition(property, value, style, propertyPrefixMap) {\n  // also check for already prefixed transitions\n  if (typeof value === 'string' && properties.hasOwnProperty(property)) {\n    var outputValue = prefixValue(value, propertyPrefixMap);\n    // if the property is already prefixed\n    var webkitOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-moz-|-ms-/.test(val);\n    }).join(',');\n\n    if (property.indexOf('Webkit') > -1) {\n      return webkitOutput;\n    }\n\n    var mozOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-webkit-|-ms-/.test(val);\n    }).join(',');\n\n    if (property.indexOf('Moz') > -1) {\n      return mozOutput;\n    }\n\n    style['Webkit' + capitalizeString(property)] = webkitOutput;\n    style['Moz' + capitalizeString(property)] = mozOutput;\n    return outputValue;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}