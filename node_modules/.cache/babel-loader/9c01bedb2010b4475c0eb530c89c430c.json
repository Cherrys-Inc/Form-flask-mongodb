{"ast":null,"code":"(function () {\n  var AcronymResult, computeScore, emptyAcronymResult, isAcronymFullWord, isMatch, isSeparator, isWordEnd, isWordStart, miss_coeff, pos_bonus, scoreAcronyms, scoreCharacter, scoreConsecutives, scoreExact, scoreExactMatch, scorePattern, scorePosition, scoreSize, tau_size, wm;\n  wm = 150;\n  pos_bonus = 20;\n  tau_size = 150;\n  miss_coeff = 0.75;\n\n  exports.score = function (string, query, options) {\n    var allowErrors, preparedQuery, score, string_lw;\n    preparedQuery = options.preparedQuery, allowErrors = options.allowErrors;\n\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\n      return 0;\n    }\n\n    string_lw = string.toLowerCase();\n    score = computeScore(string, string_lw, preparedQuery);\n    return Math.ceil(score);\n  };\n\n  exports.isMatch = isMatch = function (subject, query_lw, query_up) {\n    var i, j, m, n, qj_lw, qj_up, si;\n    m = subject.length;\n    n = query_lw.length;\n\n    if (!m || n > m) {\n      return false;\n    }\n\n    i = -1;\n    j = -1;\n\n    while (++j < n) {\n      qj_lw = query_lw.charCodeAt(j);\n      qj_up = query_up.charCodeAt(j);\n\n      while (++i < m) {\n        si = subject.charCodeAt(i);\n\n        if (si === qj_lw || si === qj_up) {\n          break;\n        }\n      }\n\n      if (i === m) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  exports.computeScore = computeScore = function (subject, subject_lw, preparedQuery) {\n    var acro, acro_score, align, csc_diag, csc_row, csc_score, csc_should_rebuild, i, j, m, miss_budget, miss_left, n, pos, query, query_lw, record_miss, score, score_diag, score_row, score_up, si_lw, start, sz;\n    query = preparedQuery.query;\n    query_lw = preparedQuery.query_lw;\n    m = subject.length;\n    n = query.length;\n    acro = scoreAcronyms(subject, subject_lw, query, query_lw);\n    acro_score = acro.score;\n\n    if (acro.count === n) {\n      return scoreExact(n, m, acro_score, acro.pos);\n    }\n\n    pos = subject_lw.indexOf(query_lw);\n\n    if (pos > -1) {\n      return scoreExactMatch(subject, subject_lw, query, query_lw, pos, n, m);\n    }\n\n    score_row = new Array(n);\n    csc_row = new Array(n);\n    sz = scoreSize(n, m);\n    miss_budget = Math.ceil(miss_coeff * n) + 5;\n    miss_left = miss_budget;\n    csc_should_rebuild = true;\n    j = -1;\n\n    while (++j < n) {\n      score_row[j] = 0;\n      csc_row[j] = 0;\n    }\n\n    i = -1;\n\n    while (++i < m) {\n      si_lw = subject_lw[i];\n\n      if (!si_lw.charCodeAt(0) in preparedQuery.charCodes) {\n        if (csc_should_rebuild) {\n          j = -1;\n\n          while (++j < n) {\n            csc_row[j] = 0;\n          }\n\n          csc_should_rebuild = false;\n        }\n\n        continue;\n      }\n\n      score = 0;\n      score_diag = 0;\n      csc_diag = 0;\n      record_miss = true;\n      csc_should_rebuild = true;\n      j = -1;\n\n      while (++j < n) {\n        score_up = score_row[j];\n\n        if (score_up > score) {\n          score = score_up;\n        }\n\n        csc_score = 0;\n\n        if (query_lw[j] === si_lw) {\n          start = isWordStart(i, subject, subject_lw);\n          csc_score = csc_diag > 0 ? csc_diag : scoreConsecutives(subject, subject_lw, query, query_lw, i, j, start);\n          align = score_diag + scoreCharacter(i, j, start, acro_score, csc_score);\n\n          if (align > score) {\n            score = align;\n            miss_left = miss_budget;\n          } else {\n            if (record_miss && --miss_left <= 0) {\n              return Math.max(score, score_row[n - 1]) * sz;\n            }\n\n            record_miss = false;\n          }\n        }\n\n        score_diag = score_up;\n        csc_diag = csc_row[j];\n        csc_row[j] = csc_score;\n        score_row[j] = score;\n      }\n    }\n\n    score = score_row[n - 1];\n    return score * sz;\n  };\n\n  exports.isWordStart = isWordStart = function (pos, subject, subject_lw) {\n    var curr_s, prev_s;\n\n    if (pos === 0) {\n      return true;\n    }\n\n    curr_s = subject[pos];\n    prev_s = subject[pos - 1];\n    return isSeparator(prev_s) || curr_s !== subject_lw[pos] && prev_s === subject_lw[pos - 1];\n  };\n\n  exports.isWordEnd = isWordEnd = function (pos, subject, subject_lw, len) {\n    var curr_s, next_s;\n\n    if (pos === len - 1) {\n      return true;\n    }\n\n    curr_s = subject[pos];\n    next_s = subject[pos + 1];\n    return isSeparator(next_s) || curr_s === subject_lw[pos] && next_s !== subject_lw[pos + 1];\n  };\n\n  isSeparator = function (c) {\n    return c === ' ' || c === '.' || c === '-' || c === '_' || c === '/' || c === '\\\\';\n  };\n\n  scorePosition = function (pos) {\n    var sc;\n\n    if (pos < pos_bonus) {\n      sc = pos_bonus - pos;\n      return 100 + sc * sc;\n    } else {\n      return Math.max(100 + pos_bonus - pos, 0);\n    }\n  };\n\n  exports.scoreSize = scoreSize = function (n, m) {\n    return tau_size / (tau_size + Math.abs(m - n));\n  };\n\n  scoreExact = function (n, m, quality, pos) {\n    return 2 * n * (wm * quality + scorePosition(pos)) * scoreSize(n, m);\n  };\n\n  exports.scorePattern = scorePattern = function (count, len, sameCase, start, end) {\n    var bonus, sz;\n    sz = count;\n    bonus = 6;\n\n    if (sameCase === count) {\n      bonus += 2;\n    }\n\n    if (start) {\n      bonus += 3;\n    }\n\n    if (end) {\n      bonus += 1;\n    }\n\n    if (count === len) {\n      if (start) {\n        if (sameCase === len) {\n          sz += 2;\n        } else {\n          sz += 1;\n        }\n      }\n\n      if (end) {\n        bonus += 1;\n      }\n    }\n\n    return sameCase + sz * (sz + bonus);\n  };\n\n  exports.scoreCharacter = scoreCharacter = function (i, j, start, acro_score, csc_score) {\n    var posBonus;\n    posBonus = scorePosition(i);\n\n    if (start) {\n      return posBonus + wm * ((acro_score > csc_score ? acro_score : csc_score) + 10);\n    }\n\n    return posBonus + wm * csc_score;\n  };\n\n  exports.scoreConsecutives = scoreConsecutives = function (subject, subject_lw, query, query_lw, i, j, startOfWord) {\n    var k, m, mi, n, nj, sameCase, sz;\n    m = subject.length;\n    n = query.length;\n    mi = m - i;\n    nj = n - j;\n    k = mi < nj ? mi : nj;\n    sameCase = 0;\n    sz = 0;\n\n    if (query[j] === subject[i]) {\n      sameCase++;\n    }\n\n    while (++sz < k && query_lw[++j] === subject_lw[++i]) {\n      if (query[j] === subject[i]) {\n        sameCase++;\n      }\n    }\n\n    if (sz < k) {\n      i--;\n    }\n\n    if (sz === 1) {\n      return 1 + 2 * sameCase;\n    }\n\n    return scorePattern(sz, n, sameCase, startOfWord, isWordEnd(i, subject, subject_lw, m));\n  };\n\n  exports.scoreExactMatch = scoreExactMatch = function (subject, subject_lw, query, query_lw, pos, n, m) {\n    var end, i, pos2, sameCase, start;\n    start = isWordStart(pos, subject, subject_lw);\n\n    if (!start) {\n      pos2 = subject_lw.indexOf(query_lw, pos + 1);\n\n      if (pos2 > -1) {\n        start = isWordStart(pos2, subject, subject_lw);\n\n        if (start) {\n          pos = pos2;\n        }\n      }\n    }\n\n    i = -1;\n    sameCase = 0;\n\n    while (++i < n) {\n      if (query[pos + i] === subject[i]) {\n        sameCase++;\n      }\n    }\n\n    end = isWordEnd(pos + n - 1, subject, subject_lw, m);\n    return scoreExact(n, m, scorePattern(n, n, sameCase, start, end), pos);\n  };\n\n  AcronymResult = function () {\n    function AcronymResult(score, pos, count) {\n      this.score = score;\n      this.pos = pos;\n      this.count = count;\n    }\n\n    return AcronymResult;\n  }();\n\n  emptyAcronymResult = new AcronymResult(0, 0.1, 0);\n\n  exports.scoreAcronyms = scoreAcronyms = function (subject, subject_lw, query, query_lw) {\n    var count, fullWord, i, j, m, n, qj_lw, sameCase, score, sepCount, sumPos;\n    m = subject.length;\n    n = query.length;\n\n    if (!(m > 1 && n > 1)) {\n      return emptyAcronymResult;\n    }\n\n    count = 0;\n    sepCount = 0;\n    sumPos = 0;\n    sameCase = 0;\n    i = -1;\n    j = -1;\n\n    while (++j < n) {\n      qj_lw = query_lw[j];\n\n      if (isSeparator(qj_lw)) {\n        i = subject_lw.indexOf(qj_lw, i + 1);\n\n        if (i > -1) {\n          sepCount++;\n          continue;\n        } else {\n          break;\n        }\n      }\n\n      while (++i < m) {\n        if (qj_lw === subject_lw[i] && isWordStart(i, subject, subject_lw)) {\n          if (query[j] === subject[i]) {\n            sameCase++;\n          }\n\n          sumPos += i;\n          count++;\n          break;\n        }\n      }\n\n      if (i === m) {\n        break;\n      }\n    }\n\n    if (count < 2) {\n      return emptyAcronymResult;\n    }\n\n    fullWord = count === n ? isAcronymFullWord(subject, subject_lw, query, count) : false;\n    score = scorePattern(count, n, sameCase, true, fullWord);\n    return new AcronymResult(score, sumPos / count, count + sepCount);\n  };\n\n  isAcronymFullWord = function (subject, subject_lw, query, nbAcronymInQuery) {\n    var count, i, m, n;\n    m = subject.length;\n    n = query.length;\n    count = 0;\n\n    if (m > 12 * n) {\n      return false;\n    }\n\n    i = -1;\n\n    while (++i < m) {\n      if (isWordStart(i, subject, subject_lw) && ++count > nbAcronymInQuery) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}).call(this);","map":{"version":3,"names":["AcronymResult","computeScore","emptyAcronymResult","isAcronymFullWord","isMatch","isSeparator","isWordEnd","isWordStart","miss_coeff","pos_bonus","scoreAcronyms","scoreCharacter","scoreConsecutives","scoreExact","scoreExactMatch","scorePattern","scorePosition","scoreSize","tau_size","wm","exports","score","string","query","options","allowErrors","preparedQuery","string_lw","core_lw","core_up","toLowerCase","Math","ceil","subject","query_lw","query_up","i","j","m","n","qj_lw","qj_up","si","length","charCodeAt","subject_lw","acro","acro_score","align","csc_diag","csc_row","csc_score","csc_should_rebuild","miss_budget","miss_left","pos","record_miss","score_diag","score_row","score_up","si_lw","start","sz","count","indexOf","Array","charCodes","max","curr_s","prev_s","len","next_s","c","sc","abs","quality","sameCase","end","bonus","posBonus","startOfWord","k","mi","nj","pos2","fullWord","sepCount","sumPos","nbAcronymInQuery","call"],"sources":["C:/Users/anish/auth-final/node_modules/fuzzaldrin-plus/lib/scorer.js"],"sourcesContent":["(function() {\n  var AcronymResult, computeScore, emptyAcronymResult, isAcronymFullWord, isMatch, isSeparator, isWordEnd, isWordStart, miss_coeff, pos_bonus, scoreAcronyms, scoreCharacter, scoreConsecutives, scoreExact, scoreExactMatch, scorePattern, scorePosition, scoreSize, tau_size, wm;\n\n  wm = 150;\n\n  pos_bonus = 20;\n\n  tau_size = 150;\n\n  miss_coeff = 0.75;\n\n  exports.score = function(string, query, options) {\n    var allowErrors, preparedQuery, score, string_lw;\n    preparedQuery = options.preparedQuery, allowErrors = options.allowErrors;\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\n      return 0;\n    }\n    string_lw = string.toLowerCase();\n    score = computeScore(string, string_lw, preparedQuery);\n    return Math.ceil(score);\n  };\n\n  exports.isMatch = isMatch = function(subject, query_lw, query_up) {\n    var i, j, m, n, qj_lw, qj_up, si;\n    m = subject.length;\n    n = query_lw.length;\n    if (!m || n > m) {\n      return false;\n    }\n    i = -1;\n    j = -1;\n    while (++j < n) {\n      qj_lw = query_lw.charCodeAt(j);\n      qj_up = query_up.charCodeAt(j);\n      while (++i < m) {\n        si = subject.charCodeAt(i);\n        if (si === qj_lw || si === qj_up) {\n          break;\n        }\n      }\n      if (i === m) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  exports.computeScore = computeScore = function(subject, subject_lw, preparedQuery) {\n    var acro, acro_score, align, csc_diag, csc_row, csc_score, csc_should_rebuild, i, j, m, miss_budget, miss_left, n, pos, query, query_lw, record_miss, score, score_diag, score_row, score_up, si_lw, start, sz;\n    query = preparedQuery.query;\n    query_lw = preparedQuery.query_lw;\n    m = subject.length;\n    n = query.length;\n    acro = scoreAcronyms(subject, subject_lw, query, query_lw);\n    acro_score = acro.score;\n    if (acro.count === n) {\n      return scoreExact(n, m, acro_score, acro.pos);\n    }\n    pos = subject_lw.indexOf(query_lw);\n    if (pos > -1) {\n      return scoreExactMatch(subject, subject_lw, query, query_lw, pos, n, m);\n    }\n    score_row = new Array(n);\n    csc_row = new Array(n);\n    sz = scoreSize(n, m);\n    miss_budget = Math.ceil(miss_coeff * n) + 5;\n    miss_left = miss_budget;\n    csc_should_rebuild = true;\n    j = -1;\n    while (++j < n) {\n      score_row[j] = 0;\n      csc_row[j] = 0;\n    }\n    i = -1;\n    while (++i < m) {\n      si_lw = subject_lw[i];\n      if (!si_lw.charCodeAt(0) in preparedQuery.charCodes) {\n        if (csc_should_rebuild) {\n          j = -1;\n          while (++j < n) {\n            csc_row[j] = 0;\n          }\n          csc_should_rebuild = false;\n        }\n        continue;\n      }\n      score = 0;\n      score_diag = 0;\n      csc_diag = 0;\n      record_miss = true;\n      csc_should_rebuild = true;\n      j = -1;\n      while (++j < n) {\n        score_up = score_row[j];\n        if (score_up > score) {\n          score = score_up;\n        }\n        csc_score = 0;\n        if (query_lw[j] === si_lw) {\n          start = isWordStart(i, subject, subject_lw);\n          csc_score = csc_diag > 0 ? csc_diag : scoreConsecutives(subject, subject_lw, query, query_lw, i, j, start);\n          align = score_diag + scoreCharacter(i, j, start, acro_score, csc_score);\n          if (align > score) {\n            score = align;\n            miss_left = miss_budget;\n          } else {\n            if (record_miss && --miss_left <= 0) {\n              return Math.max(score, score_row[n - 1]) * sz;\n            }\n            record_miss = false;\n          }\n        }\n        score_diag = score_up;\n        csc_diag = csc_row[j];\n        csc_row[j] = csc_score;\n        score_row[j] = score;\n      }\n    }\n    score = score_row[n - 1];\n    return score * sz;\n  };\n\n  exports.isWordStart = isWordStart = function(pos, subject, subject_lw) {\n    var curr_s, prev_s;\n    if (pos === 0) {\n      return true;\n    }\n    curr_s = subject[pos];\n    prev_s = subject[pos - 1];\n    return isSeparator(prev_s) || (curr_s !== subject_lw[pos] && prev_s === subject_lw[pos - 1]);\n  };\n\n  exports.isWordEnd = isWordEnd = function(pos, subject, subject_lw, len) {\n    var curr_s, next_s;\n    if (pos === len - 1) {\n      return true;\n    }\n    curr_s = subject[pos];\n    next_s = subject[pos + 1];\n    return isSeparator(next_s) || (curr_s === subject_lw[pos] && next_s !== subject_lw[pos + 1]);\n  };\n\n  isSeparator = function(c) {\n    return c === ' ' || c === '.' || c === '-' || c === '_' || c === '/' || c === '\\\\';\n  };\n\n  scorePosition = function(pos) {\n    var sc;\n    if (pos < pos_bonus) {\n      sc = pos_bonus - pos;\n      return 100 + sc * sc;\n    } else {\n      return Math.max(100 + pos_bonus - pos, 0);\n    }\n  };\n\n  exports.scoreSize = scoreSize = function(n, m) {\n    return tau_size / (tau_size + Math.abs(m - n));\n  };\n\n  scoreExact = function(n, m, quality, pos) {\n    return 2 * n * (wm * quality + scorePosition(pos)) * scoreSize(n, m);\n  };\n\n  exports.scorePattern = scorePattern = function(count, len, sameCase, start, end) {\n    var bonus, sz;\n    sz = count;\n    bonus = 6;\n    if (sameCase === count) {\n      bonus += 2;\n    }\n    if (start) {\n      bonus += 3;\n    }\n    if (end) {\n      bonus += 1;\n    }\n    if (count === len) {\n      if (start) {\n        if (sameCase === len) {\n          sz += 2;\n        } else {\n          sz += 1;\n        }\n      }\n      if (end) {\n        bonus += 1;\n      }\n    }\n    return sameCase + sz * (sz + bonus);\n  };\n\n  exports.scoreCharacter = scoreCharacter = function(i, j, start, acro_score, csc_score) {\n    var posBonus;\n    posBonus = scorePosition(i);\n    if (start) {\n      return posBonus + wm * ((acro_score > csc_score ? acro_score : csc_score) + 10);\n    }\n    return posBonus + wm * csc_score;\n  };\n\n  exports.scoreConsecutives = scoreConsecutives = function(subject, subject_lw, query, query_lw, i, j, startOfWord) {\n    var k, m, mi, n, nj, sameCase, sz;\n    m = subject.length;\n    n = query.length;\n    mi = m - i;\n    nj = n - j;\n    k = mi < nj ? mi : nj;\n    sameCase = 0;\n    sz = 0;\n    if (query[j] === subject[i]) {\n      sameCase++;\n    }\n    while (++sz < k && query_lw[++j] === subject_lw[++i]) {\n      if (query[j] === subject[i]) {\n        sameCase++;\n      }\n    }\n    if (sz < k) {\n      i--;\n    }\n    if (sz === 1) {\n      return 1 + 2 * sameCase;\n    }\n    return scorePattern(sz, n, sameCase, startOfWord, isWordEnd(i, subject, subject_lw, m));\n  };\n\n  exports.scoreExactMatch = scoreExactMatch = function(subject, subject_lw, query, query_lw, pos, n, m) {\n    var end, i, pos2, sameCase, start;\n    start = isWordStart(pos, subject, subject_lw);\n    if (!start) {\n      pos2 = subject_lw.indexOf(query_lw, pos + 1);\n      if (pos2 > -1) {\n        start = isWordStart(pos2, subject, subject_lw);\n        if (start) {\n          pos = pos2;\n        }\n      }\n    }\n    i = -1;\n    sameCase = 0;\n    while (++i < n) {\n      if (query[pos + i] === subject[i]) {\n        sameCase++;\n      }\n    }\n    end = isWordEnd(pos + n - 1, subject, subject_lw, m);\n    return scoreExact(n, m, scorePattern(n, n, sameCase, start, end), pos);\n  };\n\n  AcronymResult = (function() {\n    function AcronymResult(score, pos, count) {\n      this.score = score;\n      this.pos = pos;\n      this.count = count;\n    }\n\n    return AcronymResult;\n\n  })();\n\n  emptyAcronymResult = new AcronymResult(0, 0.1, 0);\n\n  exports.scoreAcronyms = scoreAcronyms = function(subject, subject_lw, query, query_lw) {\n    var count, fullWord, i, j, m, n, qj_lw, sameCase, score, sepCount, sumPos;\n    m = subject.length;\n    n = query.length;\n    if (!(m > 1 && n > 1)) {\n      return emptyAcronymResult;\n    }\n    count = 0;\n    sepCount = 0;\n    sumPos = 0;\n    sameCase = 0;\n    i = -1;\n    j = -1;\n    while (++j < n) {\n      qj_lw = query_lw[j];\n      if (isSeparator(qj_lw)) {\n        i = subject_lw.indexOf(qj_lw, i + 1);\n        if (i > -1) {\n          sepCount++;\n          continue;\n        } else {\n          break;\n        }\n      }\n      while (++i < m) {\n        if (qj_lw === subject_lw[i] && isWordStart(i, subject, subject_lw)) {\n          if (query[j] === subject[i]) {\n            sameCase++;\n          }\n          sumPos += i;\n          count++;\n          break;\n        }\n      }\n      if (i === m) {\n        break;\n      }\n    }\n    if (count < 2) {\n      return emptyAcronymResult;\n    }\n    fullWord = count === n ? isAcronymFullWord(subject, subject_lw, query, count) : false;\n    score = scorePattern(count, n, sameCase, true, fullWord);\n    return new AcronymResult(score, sumPos / count, count + sepCount);\n  };\n\n  isAcronymFullWord = function(subject, subject_lw, query, nbAcronymInQuery) {\n    var count, i, m, n;\n    m = subject.length;\n    n = query.length;\n    count = 0;\n    if (m > 12 * n) {\n      return false;\n    }\n    i = -1;\n    while (++i < m) {\n      if (isWordStart(i, subject, subject_lw) && ++count > nbAcronymInQuery) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}