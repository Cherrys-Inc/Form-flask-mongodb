{"ast":null,"code":"import React from 'react';\n/**\n * React hook that returns the previous value\n * @param {any} value\n */\n\nexport function usePrevious(value, initialValue) {\n  var ref = React.useRef(initialValue); // Store current value in ref, only update if the value changes\n\n  React.useEffect(function () {\n    ref.current = value;\n  }, [value]); // Return previous value (happens before update in useEffect above)\n\n  return ref.current;\n}","map":{"version":3,"names":["React","usePrevious","value","initialValue","ref","useRef","useEffect","current"],"sources":["C:/Users/anish/auth-final/node_modules/evergreen-ui/esm/hooks/use-previous.js"],"sourcesContent":["import React from 'react';\n/**\n * React hook that returns the previous value\n * @param {any} value\n */\n\nexport function usePrevious(value, initialValue) {\n  var ref = React.useRef(initialValue); // Store current value in ref, only update if the value changes\n\n  React.useEffect(function () {\n    ref.current = value;\n  }, [value]); // Return previous value (happens before update in useEffect above)\n\n  return ref.current;\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,YAA5B,EAA0C;EAC/C,IAAIC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAaF,YAAb,CAAV,CAD+C,CACT;;EAEtCH,KAAK,CAACM,SAAN,CAAgB,YAAY;IAC1BF,GAAG,CAACG,OAAJ,GAAcL,KAAd;EACD,CAFD,EAEG,CAACA,KAAD,CAFH,EAH+C,CAKlC;;EAEb,OAAOE,GAAG,CAACG,OAAX;AACD"},"metadata":{},"sourceType":"module"}