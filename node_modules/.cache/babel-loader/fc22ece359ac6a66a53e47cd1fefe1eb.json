{"ast":null,"code":"/**\n * Generates a token value for `aria-describedby` when the author provides `description`, `hint`, or `validationMessage` strings.\n * @param {String} id\n * @param {Object} helperTextCandidates\n * @param {String | React.ReactNode} [helperTextCandidates.description]\n * @param {String | React.ReactNode} [helperTextCandidates.hint]\n * @param {String | React.ReactNode} [helperTextCandidates.validationMessage]\n * @returns {String | null}\n */\nexport function generateAriaDescribedBy(id, _ref) {\n  var description = _ref.description,\n      hint = _ref.hint,\n      validationMessage = _ref.validationMessage;\n  var tokens = ''; // Only add each of the following to aria-describedby if\n  // it was provided as a string. When the author provides\n  // a React element, we assume they want to manage aria-describedby themselves.\n  // NB: Token order matches the order that these hint texts appear in the DOM.\n  // If the order of the hint texts changes, this should also change.\n\n  if (typeof description === 'string') {\n    tokens += ' ' + id + '__description';\n  }\n\n  if (typeof validationMessage === 'string') {\n    tokens += ' ' + id + '__validation-message';\n  }\n\n  if (typeof hint === 'string') {\n    tokens += ' ' + id + '__hint';\n  }\n\n  if (tokens.length) {\n    return tokens.trim();\n  }\n\n  return null;\n}","map":{"version":3,"names":["generateAriaDescribedBy","id","_ref","description","hint","validationMessage","tokens","length","trim"],"sources":["C:/Users/anish/auth-final/node_modules/evergreen-ui/esm/lib/generate-aria-describedby.js"],"sourcesContent":["/**\n * Generates a token value for `aria-describedby` when the author provides `description`, `hint`, or `validationMessage` strings.\n * @param {String} id\n * @param {Object} helperTextCandidates\n * @param {String | React.ReactNode} [helperTextCandidates.description]\n * @param {String | React.ReactNode} [helperTextCandidates.hint]\n * @param {String | React.ReactNode} [helperTextCandidates.validationMessage]\n * @returns {String | null}\n */\nexport function generateAriaDescribedBy(id, _ref) {\n  var description = _ref.description,\n      hint = _ref.hint,\n      validationMessage = _ref.validationMessage;\n  var tokens = ''; // Only add each of the following to aria-describedby if\n  // it was provided as a string. When the author provides\n  // a React element, we assume they want to manage aria-describedby themselves.\n  // NB: Token order matches the order that these hint texts appear in the DOM.\n  // If the order of the hint texts changes, this should also change.\n\n  if (typeof description === 'string') {\n    tokens += ' ' + id + '__description';\n  }\n\n  if (typeof validationMessage === 'string') {\n    tokens += ' ' + id + '__validation-message';\n  }\n\n  if (typeof hint === 'string') {\n    tokens += ' ' + id + '__hint';\n  }\n\n  if (tokens.length) {\n    return tokens.trim();\n  }\n\n  return null;\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,uBAAT,CAAiCC,EAAjC,EAAqCC,IAArC,EAA2C;EAChD,IAAIC,WAAW,GAAGD,IAAI,CAACC,WAAvB;EAAA,IACIC,IAAI,GAAGF,IAAI,CAACE,IADhB;EAAA,IAEIC,iBAAiB,GAAGH,IAAI,CAACG,iBAF7B;EAGA,IAAIC,MAAM,GAAG,EAAb,CAJgD,CAI/B;EACjB;EACA;EACA;EACA;;EAEA,IAAI,OAAOH,WAAP,KAAuB,QAA3B,EAAqC;IACnCG,MAAM,IAAI,MAAML,EAAN,GAAW,eAArB;EACD;;EAED,IAAI,OAAOI,iBAAP,KAA6B,QAAjC,EAA2C;IACzCC,MAAM,IAAI,MAAML,EAAN,GAAW,sBAArB;EACD;;EAED,IAAI,OAAOG,IAAP,KAAgB,QAApB,EAA8B;IAC5BE,MAAM,IAAI,MAAML,EAAN,GAAW,QAArB;EACD;;EAED,IAAIK,MAAM,CAACC,MAAX,EAAmB;IACjB,OAAOD,MAAM,CAACE,IAAP,EAAP;EACD;;EAED,OAAO,IAAP;AACD"},"metadata":{},"sourceType":"module"}